
NVIC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000135c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000104  0800152c  0800152c  0001152c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001630  08001630  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001630  08001630  00011630  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001634  08001634  00011634  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001638  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  0800169c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  0800169c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002850  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000006df  00000000  00000000  000228de  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000178  00000000  00000000  00022fc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000130  00000000  00000000  00023138  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000312f  00000000  00000000  00023268  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001320  00000000  00000000  00026397  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000b75c  00000000  00000000  000276b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00032e13  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c04  00000000  00000000  00032e90  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001514 	.word	0x08001514

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001514 	.word	0x08001514

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#define TEST_NUM		4

void SCB_priorityGroupInit(uint8 a_priorityG);

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0
	SCB_priorityGroupInit(0b101);
 80002b4:	2005      	movs	r0, #5
 80002b6:	f000 f815 	bl	80002e4 <SCB_priorityGroupInit>

	NVIC_enableIRQ(EXTI0_IRQ);
 80002ba:	2006      	movs	r0, #6
 80002bc:	f000 f852 	bl	8000364 <NVIC_enableIRQ>
	NVIC_enableIRQ(SPI1_IRQ);
 80002c0:	2023      	movs	r0, #35	; 0x23
 80002c2:	f000 f84f 	bl	8000364 <NVIC_enableIRQ>
	 * EXTI0 sub Priority is smaller than SPI1 sub Priority
	 *
	 * Expected result: No Nesting
	 */

	NVIC_setPriority(EXTI0_IRQ, 2, 2);
 80002c6:	2202      	movs	r2, #2
 80002c8:	2102      	movs	r1, #2
 80002ca:	2006      	movs	r0, #6
 80002cc:	f000 f898 	bl	8000400 <NVIC_setPriority>
	NVIC_setPriority(SPI1_IRQ, 2, 0);
 80002d0:	2200      	movs	r2, #0
 80002d2:	2102      	movs	r1, #2
 80002d4:	2023      	movs	r0, #35	; 0x23
 80002d6:	f000 f893 	bl	8000400 <NVIC_setPriority>

#endif

	NVIC_SetPendingIRQ(EXTI0_IRQ);
 80002da:	2006      	movs	r0, #6
 80002dc:	f000 f85a 	bl	8000394 <NVIC_SetPendingIRQ>

	/* Loop forever */
	for(;;);
 80002e0:	e7fe      	b.n	80002e0 <main+0x30>
	...

080002e4 <SCB_priorityGroupInit>:
}

/* ----------------- SCB Priority Grouping Initialization Function ----------------- */
void SCB_priorityGroupInit(uint8 a_priorityG)
{
 80002e4:	b480      	push	{r7}
 80002e6:	b083      	sub	sp, #12
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	4603      	mov	r3, r0
 80002ec:	71fb      	strb	r3, [r7, #7]
	a_priorityG &= 0x7;
 80002ee:	79fb      	ldrb	r3, [r7, #7]
 80002f0:	f003 0307 	and.w	r3, r3, #7
 80002f4:	71fb      	strb	r3, [r7, #7]

	*((uint32 *)(0xE000ED0CUL)) = 0x05FA0000UL | (a_priorityG << 8);
 80002f6:	79fb      	ldrb	r3, [r7, #7]
 80002f8:	021b      	lsls	r3, r3, #8
 80002fa:	4a05      	ldr	r2, [pc, #20]	; (8000310 <SCB_priorityGroupInit+0x2c>)
 80002fc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000300:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000304:	6013      	str	r3, [r2, #0]
}
 8000306:	bf00      	nop
 8000308:	370c      	adds	r7, #12
 800030a:	46bd      	mov	sp, r7
 800030c:	bc80      	pop	{r7}
 800030e:	4770      	bx	lr
 8000310:	e000ed0c 	.word	0xe000ed0c

08000314 <EXTI0_IRQHandler>:

/* ------------------------------------- ISRs ------------------------------------- */

void EXTI0_IRQHandler(void)
{
 8000314:	b580      	push	{r7, lr}
 8000316:	af00      	add	r7, sp, #0
	printf("In EXTI0 Handler\n");
 8000318:	4807      	ldr	r0, [pc, #28]	; (8000338 <EXTI0_IRQHandler+0x24>)
 800031a:	f000 fa29 	bl	8000770 <puts>

	NVIC_SetPendingIRQ(SPI1_IRQ);
 800031e:	2023      	movs	r0, #35	; 0x23
 8000320:	f000 f838 	bl	8000394 <NVIC_SetPendingIRQ>

	printf("NVIC_getPendingIRQ(SPI1_IRQ) = %d\n", NVIC_getPendingIRQ(SPI1_IRQ));
 8000324:	2023      	movs	r0, #35	; 0x23
 8000326:	f000 f84f 	bl	80003c8 <NVIC_getPendingIRQ>
 800032a:	4603      	mov	r3, r0
 800032c:	4619      	mov	r1, r3
 800032e:	4803      	ldr	r0, [pc, #12]	; (800033c <EXTI0_IRQHandler+0x28>)
 8000330:	f000 f9aa 	bl	8000688 <iprintf>

	while(1);
 8000334:	e7fe      	b.n	8000334 <EXTI0_IRQHandler+0x20>
 8000336:	bf00      	nop
 8000338:	0800152c 	.word	0x0800152c
 800033c:	08001540 	.word	0x08001540

08000340 <SPI1_IRQHandler>:
}

void SPI1_IRQHandler(void)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	af00      	add	r7, sp, #0
	printf("In SPI1 Handler\n");
 8000344:	4805      	ldr	r0, [pc, #20]	; (800035c <SPI1_IRQHandler+0x1c>)
 8000346:	f000 fa13 	bl	8000770 <puts>
	printf("NVIC_getPendingIRQ(EXTI0_IRQ) = %d\n", NVIC_getPendingIRQ(EXTI0_IRQ));
 800034a:	2006      	movs	r0, #6
 800034c:	f000 f83c 	bl	80003c8 <NVIC_getPendingIRQ>
 8000350:	4603      	mov	r3, r0
 8000352:	4619      	mov	r1, r3
 8000354:	4802      	ldr	r0, [pc, #8]	; (8000360 <SPI1_IRQHandler+0x20>)
 8000356:	f000 f997 	bl	8000688 <iprintf>
	while(1);
 800035a:	e7fe      	b.n	800035a <SPI1_IRQHandler+0x1a>
 800035c:	08001564 	.word	0x08001564
 8000360:	08001574 	.word	0x08001574

08000364 <NVIC_enableIRQ>:
 *
 * Return:
 * 			void: Returns nothing
 */
void NVIC_enableIRQ(IRQn_Type a_IRQn)
{
 8000364:	b480      	push	{r7}
 8000366:	b083      	sub	sp, #12
 8000368:	af00      	add	r7, sp, #0
 800036a:	4603      	mov	r3, r0
 800036c:	71fb      	strb	r3, [r7, #7]
	NVIC->ISER[GET_IRQ_REG_NUM(a_IRQn)] = 1 << GET_IRQ_BIT_NUM(a_IRQn);
 800036e:	79fb      	ldrb	r3, [r7, #7]
 8000370:	f003 031f 	and.w	r3, r3, #31
 8000374:	2201      	movs	r2, #1
 8000376:	fa02 f103 	lsl.w	r1, r2, r3
 800037a:	4a05      	ldr	r2, [pc, #20]	; (8000390 <NVIC_enableIRQ+0x2c>)
 800037c:	79fb      	ldrb	r3, [r7, #7]
 800037e:	095b      	lsrs	r3, r3, #5
 8000380:	b2db      	uxtb	r3, r3
 8000382:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000386:	bf00      	nop
 8000388:	370c      	adds	r7, #12
 800038a:	46bd      	mov	sp, r7
 800038c:	bc80      	pop	{r7}
 800038e:	4770      	bx	lr
 8000390:	e000e100 	.word	0xe000e100

08000394 <NVIC_SetPendingIRQ>:
 *
 * Return:
 * 			void: Returns nothing
 */
void NVIC_SetPendingIRQ(IRQn_Type a_IRQn)
{
 8000394:	b480      	push	{r7}
 8000396:	b083      	sub	sp, #12
 8000398:	af00      	add	r7, sp, #0
 800039a:	4603      	mov	r3, r0
 800039c:	71fb      	strb	r3, [r7, #7]
	NVIC->ISPR[GET_IRQ_REG_NUM(a_IRQn)] = 1 << GET_IRQ_BIT_NUM(a_IRQn);
 800039e:	79fb      	ldrb	r3, [r7, #7]
 80003a0:	f003 031f 	and.w	r3, r3, #31
 80003a4:	2201      	movs	r2, #1
 80003a6:	fa02 f103 	lsl.w	r1, r2, r3
 80003aa:	4a06      	ldr	r2, [pc, #24]	; (80003c4 <NVIC_SetPendingIRQ+0x30>)
 80003ac:	79fb      	ldrb	r3, [r7, #7]
 80003ae:	095b      	lsrs	r3, r3, #5
 80003b0:	b2db      	uxtb	r3, r3
 80003b2:	3340      	adds	r3, #64	; 0x40
 80003b4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80003b8:	bf00      	nop
 80003ba:	370c      	adds	r7, #12
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	e000e100 	.word	0xe000e100

080003c8 <NVIC_getPendingIRQ>:
 *
 * Return:
 * 			uint8: This function returns non-zero value if the pending status is set to 1.
 */
uint8 NVIC_getPendingIRQ(IRQn_Type a_IRQn)
{
 80003c8:	b480      	push	{r7}
 80003ca:	b083      	sub	sp, #12
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	4603      	mov	r3, r0
 80003d0:	71fb      	strb	r3, [r7, #7]
	return (uint8)((NVIC->IABR[GET_IRQ_REG_NUM(a_IRQn)] >> GET_IRQ_BIT_NUM(a_IRQn)) & 0x1);
 80003d2:	4a0a      	ldr	r2, [pc, #40]	; (80003fc <NVIC_getPendingIRQ+0x34>)
 80003d4:	79fb      	ldrb	r3, [r7, #7]
 80003d6:	095b      	lsrs	r3, r3, #5
 80003d8:	b2db      	uxtb	r3, r3
 80003da:	3380      	adds	r3, #128	; 0x80
 80003dc:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003e0:	79fb      	ldrb	r3, [r7, #7]
 80003e2:	f003 031f 	and.w	r3, r3, #31
 80003e6:	fa22 f303 	lsr.w	r3, r2, r3
 80003ea:	b2db      	uxtb	r3, r3
 80003ec:	f003 0301 	and.w	r3, r3, #1
 80003f0:	b2db      	uxtb	r3, r3
}
 80003f2:	4618      	mov	r0, r3
 80003f4:	370c      	adds	r7, #12
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bc80      	pop	{r7}
 80003fa:	4770      	bx	lr
 80003fc:	e000e100 	.word	0xe000e100

08000400 <NVIC_setPriority>:
 *
 * Return:
 * 			void: Returns nothing
 */
void NVIC_setPriority(IRQn_Type a_IRQn, uint8 a_gpPriority, uint8 a_subPriority)
{
 8000400:	b480      	push	{r7}
 8000402:	b083      	sub	sp, #12
 8000404:	af00      	add	r7, sp, #0
 8000406:	4603      	mov	r3, r0
 8000408:	71fb      	strb	r3, [r7, #7]
 800040a:	460b      	mov	r3, r1
 800040c:	71bb      	strb	r3, [r7, #6]
 800040e:	4613      	mov	r3, r2
 8000410:	717b      	strb	r3, [r7, #5]
	NVIC->IPR[a_IRQn] = GET_IRQ_PRIORITY(a_gpPriority, a_subPriority);
 8000412:	79bb      	ldrb	r3, [r7, #6]
 8000414:	019b      	lsls	r3, r3, #6
 8000416:	b25a      	sxtb	r2, r3
 8000418:	797b      	ldrb	r3, [r7, #5]
 800041a:	011b      	lsls	r3, r3, #4
 800041c:	b25b      	sxtb	r3, r3
 800041e:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000422:	b25b      	sxtb	r3, r3
 8000424:	4313      	orrs	r3, r2
 8000426:	b259      	sxtb	r1, r3
 8000428:	4a05      	ldr	r2, [pc, #20]	; (8000440 <NVIC_setPriority+0x40>)
 800042a:	79fb      	ldrb	r3, [r7, #7]
 800042c:	b2c9      	uxtb	r1, r1
 800042e:	4413      	add	r3, r2
 8000430:	460a      	mov	r2, r1
 8000432:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8000436:	bf00      	nop
 8000438:	370c      	adds	r7, #12
 800043a:	46bd      	mov	sp, r7
 800043c:	bc80      	pop	{r7}
 800043e:	4770      	bx	lr
 8000440:	e000e100 	.word	0xe000e100

08000444 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000444:	b480      	push	{r7}
 8000446:	b083      	sub	sp, #12
 8000448:	af00      	add	r7, sp, #0
 800044a:	4603      	mov	r3, r0
 800044c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800044e:	4b0e      	ldr	r3, [pc, #56]	; (8000488 <ITM_SendChar+0x44>)
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	4a0d      	ldr	r2, [pc, #52]	; (8000488 <ITM_SendChar+0x44>)
 8000454:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000458:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800045a:	4b0c      	ldr	r3, [pc, #48]	; (800048c <ITM_SendChar+0x48>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	4a0b      	ldr	r2, [pc, #44]	; (800048c <ITM_SendChar+0x48>)
 8000460:	f043 0301 	orr.w	r3, r3, #1
 8000464:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000466:	bf00      	nop
 8000468:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	f003 0301 	and.w	r3, r3, #1
 8000472:	2b00      	cmp	r3, #0
 8000474:	d0f8      	beq.n	8000468 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000476:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800047a:	79fb      	ldrb	r3, [r7, #7]
 800047c:	6013      	str	r3, [r2, #0]
}
 800047e:	bf00      	nop
 8000480:	370c      	adds	r7, #12
 8000482:	46bd      	mov	sp, r7
 8000484:	bc80      	pop	{r7}
 8000486:	4770      	bx	lr
 8000488:	e000edfc 	.word	0xe000edfc
 800048c:	e0000e00 	.word	0xe0000e00

08000490 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000490:	b580      	push	{r7, lr}
 8000492:	b086      	sub	sp, #24
 8000494:	af00      	add	r7, sp, #0
 8000496:	60f8      	str	r0, [r7, #12]
 8000498:	60b9      	str	r1, [r7, #8]
 800049a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800049c:	2300      	movs	r3, #0
 800049e:	617b      	str	r3, [r7, #20]
 80004a0:	e00a      	b.n	80004b8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80004a2:	f3af 8000 	nop.w
 80004a6:	4601      	mov	r1, r0
 80004a8:	68bb      	ldr	r3, [r7, #8]
 80004aa:	1c5a      	adds	r2, r3, #1
 80004ac:	60ba      	str	r2, [r7, #8]
 80004ae:	b2ca      	uxtb	r2, r1
 80004b0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004b2:	697b      	ldr	r3, [r7, #20]
 80004b4:	3301      	adds	r3, #1
 80004b6:	617b      	str	r3, [r7, #20]
 80004b8:	697a      	ldr	r2, [r7, #20]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	429a      	cmp	r2, r3
 80004be:	dbf0      	blt.n	80004a2 <_read+0x12>
	}

return len;
 80004c0:	687b      	ldr	r3, [r7, #4]
}
 80004c2:	4618      	mov	r0, r3
 80004c4:	3718      	adds	r7, #24
 80004c6:	46bd      	mov	sp, r7
 80004c8:	bd80      	pop	{r7, pc}

080004ca <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004ca:	b580      	push	{r7, lr}
 80004cc:	b086      	sub	sp, #24
 80004ce:	af00      	add	r7, sp, #0
 80004d0:	60f8      	str	r0, [r7, #12]
 80004d2:	60b9      	str	r1, [r7, #8]
 80004d4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004d6:	2300      	movs	r3, #0
 80004d8:	617b      	str	r3, [r7, #20]
 80004da:	e009      	b.n	80004f0 <_write+0x26>
	{
		/* Write into the ITM buffer */
		ITM_SendChar(*ptr++);
 80004dc:	68bb      	ldr	r3, [r7, #8]
 80004de:	1c5a      	adds	r2, r3, #1
 80004e0:	60ba      	str	r2, [r7, #8]
 80004e2:	781b      	ldrb	r3, [r3, #0]
 80004e4:	4618      	mov	r0, r3
 80004e6:	f7ff ffad 	bl	8000444 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ea:	697b      	ldr	r3, [r7, #20]
 80004ec:	3301      	adds	r3, #1
 80004ee:	617b      	str	r3, [r7, #20]
 80004f0:	697a      	ldr	r2, [r7, #20]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	429a      	cmp	r2, r3
 80004f6:	dbf1      	blt.n	80004dc <_write+0x12>
	}
	return len;
 80004f8:	687b      	ldr	r3, [r7, #4]
}
 80004fa:	4618      	mov	r0, r3
 80004fc:	3718      	adds	r7, #24
 80004fe:	46bd      	mov	sp, r7
 8000500:	bd80      	pop	{r7, pc}

08000502 <_close>:

int _close(int file)
{
 8000502:	b480      	push	{r7}
 8000504:	b083      	sub	sp, #12
 8000506:	af00      	add	r7, sp, #0
 8000508:	6078      	str	r0, [r7, #4]
	return -1;
 800050a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800050e:	4618      	mov	r0, r3
 8000510:	370c      	adds	r7, #12
 8000512:	46bd      	mov	sp, r7
 8000514:	bc80      	pop	{r7}
 8000516:	4770      	bx	lr

08000518 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000518:	b480      	push	{r7}
 800051a:	b083      	sub	sp, #12
 800051c:	af00      	add	r7, sp, #0
 800051e:	6078      	str	r0, [r7, #4]
 8000520:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000522:	683b      	ldr	r3, [r7, #0]
 8000524:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000528:	605a      	str	r2, [r3, #4]
	return 0;
 800052a:	2300      	movs	r3, #0
}
 800052c:	4618      	mov	r0, r3
 800052e:	370c      	adds	r7, #12
 8000530:	46bd      	mov	sp, r7
 8000532:	bc80      	pop	{r7}
 8000534:	4770      	bx	lr

08000536 <_isatty>:

int _isatty(int file)
{
 8000536:	b480      	push	{r7}
 8000538:	b083      	sub	sp, #12
 800053a:	af00      	add	r7, sp, #0
 800053c:	6078      	str	r0, [r7, #4]
	return 1;
 800053e:	2301      	movs	r3, #1
}
 8000540:	4618      	mov	r0, r3
 8000542:	370c      	adds	r7, #12
 8000544:	46bd      	mov	sp, r7
 8000546:	bc80      	pop	{r7}
 8000548:	4770      	bx	lr

0800054a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800054a:	b480      	push	{r7}
 800054c:	b085      	sub	sp, #20
 800054e:	af00      	add	r7, sp, #0
 8000550:	60f8      	str	r0, [r7, #12]
 8000552:	60b9      	str	r1, [r7, #8]
 8000554:	607a      	str	r2, [r7, #4]
	return 0;
 8000556:	2300      	movs	r3, #0
}
 8000558:	4618      	mov	r0, r3
 800055a:	3714      	adds	r7, #20
 800055c:	46bd      	mov	sp, r7
 800055e:	bc80      	pop	{r7}
 8000560:	4770      	bx	lr
	...

08000564 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000564:	b580      	push	{r7, lr}
 8000566:	b086      	sub	sp, #24
 8000568:	af00      	add	r7, sp, #0
 800056a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800056c:	4a14      	ldr	r2, [pc, #80]	; (80005c0 <_sbrk+0x5c>)
 800056e:	4b15      	ldr	r3, [pc, #84]	; (80005c4 <_sbrk+0x60>)
 8000570:	1ad3      	subs	r3, r2, r3
 8000572:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000574:	697b      	ldr	r3, [r7, #20]
 8000576:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000578:	4b13      	ldr	r3, [pc, #76]	; (80005c8 <_sbrk+0x64>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	2b00      	cmp	r3, #0
 800057e:	d102      	bne.n	8000586 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000580:	4b11      	ldr	r3, [pc, #68]	; (80005c8 <_sbrk+0x64>)
 8000582:	4a12      	ldr	r2, [pc, #72]	; (80005cc <_sbrk+0x68>)
 8000584:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000586:	4b10      	ldr	r3, [pc, #64]	; (80005c8 <_sbrk+0x64>)
 8000588:	681a      	ldr	r2, [r3, #0]
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	4413      	add	r3, r2
 800058e:	693a      	ldr	r2, [r7, #16]
 8000590:	429a      	cmp	r2, r3
 8000592:	d207      	bcs.n	80005a4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000594:	f000 f846 	bl	8000624 <__errno>
 8000598:	4602      	mov	r2, r0
 800059a:	230c      	movs	r3, #12
 800059c:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 800059e:	f04f 33ff 	mov.w	r3, #4294967295
 80005a2:	e009      	b.n	80005b8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80005a4:	4b08      	ldr	r3, [pc, #32]	; (80005c8 <_sbrk+0x64>)
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80005aa:	4b07      	ldr	r3, [pc, #28]	; (80005c8 <_sbrk+0x64>)
 80005ac:	681a      	ldr	r2, [r3, #0]
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	4413      	add	r3, r2
 80005b2:	4a05      	ldr	r2, [pc, #20]	; (80005c8 <_sbrk+0x64>)
 80005b4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80005b6:	68fb      	ldr	r3, [r7, #12]
}
 80005b8:	4618      	mov	r0, r3
 80005ba:	3718      	adds	r7, #24
 80005bc:	46bd      	mov	sp, r7
 80005be:	bd80      	pop	{r7, pc}
 80005c0:	20020000 	.word	0x20020000
 80005c4:	00000400 	.word	0x00000400
 80005c8:	20000080 	.word	0x20000080
 80005cc:	20000090 	.word	0x20000090

080005d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d0:	480d      	ldr	r0, [pc, #52]	; (8000608 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005d2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005d8:	480c      	ldr	r0, [pc, #48]	; (800060c <LoopForever+0x6>)
  ldr r1, =_edata
 80005da:	490d      	ldr	r1, [pc, #52]	; (8000610 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005dc:	4a0d      	ldr	r2, [pc, #52]	; (8000614 <LoopForever+0xe>)
  movs r3, #0
 80005de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e0:	e002      	b.n	80005e8 <LoopCopyDataInit>

080005e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005e6:	3304      	adds	r3, #4

080005e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005ec:	d3f9      	bcc.n	80005e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ee:	4a0a      	ldr	r2, [pc, #40]	; (8000618 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f0:	4c0a      	ldr	r4, [pc, #40]	; (800061c <LoopForever+0x16>)
  movs r3, #0
 80005f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005f4:	e001      	b.n	80005fa <LoopFillZerobss>

080005f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005f8:	3204      	adds	r2, #4

080005fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005fc:	d3fb      	bcc.n	80005f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005fe:	f000 f817 	bl	8000630 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000602:	f7ff fe55 	bl	80002b0 <main>

08000606 <LoopForever>:

LoopForever:
    b LoopForever
 8000606:	e7fe      	b.n	8000606 <LoopForever>
  ldr   r0, =_estack
 8000608:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800060c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000610:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000614:	08001638 	.word	0x08001638
  ldr r2, =_sbss
 8000618:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800061c:	20000090 	.word	0x20000090

08000620 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000620:	e7fe      	b.n	8000620 <ADC_IRQHandler>
	...

08000624 <__errno>:
 8000624:	4b01      	ldr	r3, [pc, #4]	; (800062c <__errno+0x8>)
 8000626:	6818      	ldr	r0, [r3, #0]
 8000628:	4770      	bx	lr
 800062a:	bf00      	nop
 800062c:	20000000 	.word	0x20000000

08000630 <__libc_init_array>:
 8000630:	b570      	push	{r4, r5, r6, lr}
 8000632:	4e0d      	ldr	r6, [pc, #52]	; (8000668 <__libc_init_array+0x38>)
 8000634:	4c0d      	ldr	r4, [pc, #52]	; (800066c <__libc_init_array+0x3c>)
 8000636:	1ba4      	subs	r4, r4, r6
 8000638:	10a4      	asrs	r4, r4, #2
 800063a:	2500      	movs	r5, #0
 800063c:	42a5      	cmp	r5, r4
 800063e:	d109      	bne.n	8000654 <__libc_init_array+0x24>
 8000640:	4e0b      	ldr	r6, [pc, #44]	; (8000670 <__libc_init_array+0x40>)
 8000642:	4c0c      	ldr	r4, [pc, #48]	; (8000674 <__libc_init_array+0x44>)
 8000644:	f000 ff66 	bl	8001514 <_init>
 8000648:	1ba4      	subs	r4, r4, r6
 800064a:	10a4      	asrs	r4, r4, #2
 800064c:	2500      	movs	r5, #0
 800064e:	42a5      	cmp	r5, r4
 8000650:	d105      	bne.n	800065e <__libc_init_array+0x2e>
 8000652:	bd70      	pop	{r4, r5, r6, pc}
 8000654:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000658:	4798      	blx	r3
 800065a:	3501      	adds	r5, #1
 800065c:	e7ee      	b.n	800063c <__libc_init_array+0xc>
 800065e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000662:	4798      	blx	r3
 8000664:	3501      	adds	r5, #1
 8000666:	e7f2      	b.n	800064e <__libc_init_array+0x1e>
 8000668:	08001630 	.word	0x08001630
 800066c:	08001630 	.word	0x08001630
 8000670:	08001630 	.word	0x08001630
 8000674:	08001634 	.word	0x08001634

08000678 <memset>:
 8000678:	4402      	add	r2, r0
 800067a:	4603      	mov	r3, r0
 800067c:	4293      	cmp	r3, r2
 800067e:	d100      	bne.n	8000682 <memset+0xa>
 8000680:	4770      	bx	lr
 8000682:	f803 1b01 	strb.w	r1, [r3], #1
 8000686:	e7f9      	b.n	800067c <memset+0x4>

08000688 <iprintf>:
 8000688:	b40f      	push	{r0, r1, r2, r3}
 800068a:	4b0a      	ldr	r3, [pc, #40]	; (80006b4 <iprintf+0x2c>)
 800068c:	b513      	push	{r0, r1, r4, lr}
 800068e:	681c      	ldr	r4, [r3, #0]
 8000690:	b124      	cbz	r4, 800069c <iprintf+0x14>
 8000692:	69a3      	ldr	r3, [r4, #24]
 8000694:	b913      	cbnz	r3, 800069c <iprintf+0x14>
 8000696:	4620      	mov	r0, r4
 8000698:	f000 fa22 	bl	8000ae0 <__sinit>
 800069c:	ab05      	add	r3, sp, #20
 800069e:	9a04      	ldr	r2, [sp, #16]
 80006a0:	68a1      	ldr	r1, [r4, #8]
 80006a2:	9301      	str	r3, [sp, #4]
 80006a4:	4620      	mov	r0, r4
 80006a6:	f000 fbd9 	bl	8000e5c <_vfiprintf_r>
 80006aa:	b002      	add	sp, #8
 80006ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006b0:	b004      	add	sp, #16
 80006b2:	4770      	bx	lr
 80006b4:	20000000 	.word	0x20000000

080006b8 <_puts_r>:
 80006b8:	b570      	push	{r4, r5, r6, lr}
 80006ba:	460e      	mov	r6, r1
 80006bc:	4605      	mov	r5, r0
 80006be:	b118      	cbz	r0, 80006c8 <_puts_r+0x10>
 80006c0:	6983      	ldr	r3, [r0, #24]
 80006c2:	b90b      	cbnz	r3, 80006c8 <_puts_r+0x10>
 80006c4:	f000 fa0c 	bl	8000ae0 <__sinit>
 80006c8:	69ab      	ldr	r3, [r5, #24]
 80006ca:	68ac      	ldr	r4, [r5, #8]
 80006cc:	b913      	cbnz	r3, 80006d4 <_puts_r+0x1c>
 80006ce:	4628      	mov	r0, r5
 80006d0:	f000 fa06 	bl	8000ae0 <__sinit>
 80006d4:	4b23      	ldr	r3, [pc, #140]	; (8000764 <_puts_r+0xac>)
 80006d6:	429c      	cmp	r4, r3
 80006d8:	d117      	bne.n	800070a <_puts_r+0x52>
 80006da:	686c      	ldr	r4, [r5, #4]
 80006dc:	89a3      	ldrh	r3, [r4, #12]
 80006de:	071b      	lsls	r3, r3, #28
 80006e0:	d51d      	bpl.n	800071e <_puts_r+0x66>
 80006e2:	6923      	ldr	r3, [r4, #16]
 80006e4:	b1db      	cbz	r3, 800071e <_puts_r+0x66>
 80006e6:	3e01      	subs	r6, #1
 80006e8:	68a3      	ldr	r3, [r4, #8]
 80006ea:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006ee:	3b01      	subs	r3, #1
 80006f0:	60a3      	str	r3, [r4, #8]
 80006f2:	b9e9      	cbnz	r1, 8000730 <_puts_r+0x78>
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	da2e      	bge.n	8000756 <_puts_r+0x9e>
 80006f8:	4622      	mov	r2, r4
 80006fa:	210a      	movs	r1, #10
 80006fc:	4628      	mov	r0, r5
 80006fe:	f000 f83f 	bl	8000780 <__swbuf_r>
 8000702:	3001      	adds	r0, #1
 8000704:	d011      	beq.n	800072a <_puts_r+0x72>
 8000706:	200a      	movs	r0, #10
 8000708:	e011      	b.n	800072e <_puts_r+0x76>
 800070a:	4b17      	ldr	r3, [pc, #92]	; (8000768 <_puts_r+0xb0>)
 800070c:	429c      	cmp	r4, r3
 800070e:	d101      	bne.n	8000714 <_puts_r+0x5c>
 8000710:	68ac      	ldr	r4, [r5, #8]
 8000712:	e7e3      	b.n	80006dc <_puts_r+0x24>
 8000714:	4b15      	ldr	r3, [pc, #84]	; (800076c <_puts_r+0xb4>)
 8000716:	429c      	cmp	r4, r3
 8000718:	bf08      	it	eq
 800071a:	68ec      	ldreq	r4, [r5, #12]
 800071c:	e7de      	b.n	80006dc <_puts_r+0x24>
 800071e:	4621      	mov	r1, r4
 8000720:	4628      	mov	r0, r5
 8000722:	f000 f87f 	bl	8000824 <__swsetup_r>
 8000726:	2800      	cmp	r0, #0
 8000728:	d0dd      	beq.n	80006e6 <_puts_r+0x2e>
 800072a:	f04f 30ff 	mov.w	r0, #4294967295
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	2b00      	cmp	r3, #0
 8000732:	da04      	bge.n	800073e <_puts_r+0x86>
 8000734:	69a2      	ldr	r2, [r4, #24]
 8000736:	429a      	cmp	r2, r3
 8000738:	dc06      	bgt.n	8000748 <_puts_r+0x90>
 800073a:	290a      	cmp	r1, #10
 800073c:	d004      	beq.n	8000748 <_puts_r+0x90>
 800073e:	6823      	ldr	r3, [r4, #0]
 8000740:	1c5a      	adds	r2, r3, #1
 8000742:	6022      	str	r2, [r4, #0]
 8000744:	7019      	strb	r1, [r3, #0]
 8000746:	e7cf      	b.n	80006e8 <_puts_r+0x30>
 8000748:	4622      	mov	r2, r4
 800074a:	4628      	mov	r0, r5
 800074c:	f000 f818 	bl	8000780 <__swbuf_r>
 8000750:	3001      	adds	r0, #1
 8000752:	d1c9      	bne.n	80006e8 <_puts_r+0x30>
 8000754:	e7e9      	b.n	800072a <_puts_r+0x72>
 8000756:	6823      	ldr	r3, [r4, #0]
 8000758:	200a      	movs	r0, #10
 800075a:	1c5a      	adds	r2, r3, #1
 800075c:	6022      	str	r2, [r4, #0]
 800075e:	7018      	strb	r0, [r3, #0]
 8000760:	e7e5      	b.n	800072e <_puts_r+0x76>
 8000762:	bf00      	nop
 8000764:	080015bc 	.word	0x080015bc
 8000768:	080015dc 	.word	0x080015dc
 800076c:	0800159c 	.word	0x0800159c

08000770 <puts>:
 8000770:	4b02      	ldr	r3, [pc, #8]	; (800077c <puts+0xc>)
 8000772:	4601      	mov	r1, r0
 8000774:	6818      	ldr	r0, [r3, #0]
 8000776:	f7ff bf9f 	b.w	80006b8 <_puts_r>
 800077a:	bf00      	nop
 800077c:	20000000 	.word	0x20000000

08000780 <__swbuf_r>:
 8000780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000782:	460e      	mov	r6, r1
 8000784:	4614      	mov	r4, r2
 8000786:	4605      	mov	r5, r0
 8000788:	b118      	cbz	r0, 8000792 <__swbuf_r+0x12>
 800078a:	6983      	ldr	r3, [r0, #24]
 800078c:	b90b      	cbnz	r3, 8000792 <__swbuf_r+0x12>
 800078e:	f000 f9a7 	bl	8000ae0 <__sinit>
 8000792:	4b21      	ldr	r3, [pc, #132]	; (8000818 <__swbuf_r+0x98>)
 8000794:	429c      	cmp	r4, r3
 8000796:	d12a      	bne.n	80007ee <__swbuf_r+0x6e>
 8000798:	686c      	ldr	r4, [r5, #4]
 800079a:	69a3      	ldr	r3, [r4, #24]
 800079c:	60a3      	str	r3, [r4, #8]
 800079e:	89a3      	ldrh	r3, [r4, #12]
 80007a0:	071a      	lsls	r2, r3, #28
 80007a2:	d52e      	bpl.n	8000802 <__swbuf_r+0x82>
 80007a4:	6923      	ldr	r3, [r4, #16]
 80007a6:	b363      	cbz	r3, 8000802 <__swbuf_r+0x82>
 80007a8:	6923      	ldr	r3, [r4, #16]
 80007aa:	6820      	ldr	r0, [r4, #0]
 80007ac:	1ac0      	subs	r0, r0, r3
 80007ae:	6963      	ldr	r3, [r4, #20]
 80007b0:	b2f6      	uxtb	r6, r6
 80007b2:	4283      	cmp	r3, r0
 80007b4:	4637      	mov	r7, r6
 80007b6:	dc04      	bgt.n	80007c2 <__swbuf_r+0x42>
 80007b8:	4621      	mov	r1, r4
 80007ba:	4628      	mov	r0, r5
 80007bc:	f000 f926 	bl	8000a0c <_fflush_r>
 80007c0:	bb28      	cbnz	r0, 800080e <__swbuf_r+0x8e>
 80007c2:	68a3      	ldr	r3, [r4, #8]
 80007c4:	3b01      	subs	r3, #1
 80007c6:	60a3      	str	r3, [r4, #8]
 80007c8:	6823      	ldr	r3, [r4, #0]
 80007ca:	1c5a      	adds	r2, r3, #1
 80007cc:	6022      	str	r2, [r4, #0]
 80007ce:	701e      	strb	r6, [r3, #0]
 80007d0:	6963      	ldr	r3, [r4, #20]
 80007d2:	3001      	adds	r0, #1
 80007d4:	4283      	cmp	r3, r0
 80007d6:	d004      	beq.n	80007e2 <__swbuf_r+0x62>
 80007d8:	89a3      	ldrh	r3, [r4, #12]
 80007da:	07db      	lsls	r3, r3, #31
 80007dc:	d519      	bpl.n	8000812 <__swbuf_r+0x92>
 80007de:	2e0a      	cmp	r6, #10
 80007e0:	d117      	bne.n	8000812 <__swbuf_r+0x92>
 80007e2:	4621      	mov	r1, r4
 80007e4:	4628      	mov	r0, r5
 80007e6:	f000 f911 	bl	8000a0c <_fflush_r>
 80007ea:	b190      	cbz	r0, 8000812 <__swbuf_r+0x92>
 80007ec:	e00f      	b.n	800080e <__swbuf_r+0x8e>
 80007ee:	4b0b      	ldr	r3, [pc, #44]	; (800081c <__swbuf_r+0x9c>)
 80007f0:	429c      	cmp	r4, r3
 80007f2:	d101      	bne.n	80007f8 <__swbuf_r+0x78>
 80007f4:	68ac      	ldr	r4, [r5, #8]
 80007f6:	e7d0      	b.n	800079a <__swbuf_r+0x1a>
 80007f8:	4b09      	ldr	r3, [pc, #36]	; (8000820 <__swbuf_r+0xa0>)
 80007fa:	429c      	cmp	r4, r3
 80007fc:	bf08      	it	eq
 80007fe:	68ec      	ldreq	r4, [r5, #12]
 8000800:	e7cb      	b.n	800079a <__swbuf_r+0x1a>
 8000802:	4621      	mov	r1, r4
 8000804:	4628      	mov	r0, r5
 8000806:	f000 f80d 	bl	8000824 <__swsetup_r>
 800080a:	2800      	cmp	r0, #0
 800080c:	d0cc      	beq.n	80007a8 <__swbuf_r+0x28>
 800080e:	f04f 37ff 	mov.w	r7, #4294967295
 8000812:	4638      	mov	r0, r7
 8000814:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000816:	bf00      	nop
 8000818:	080015bc 	.word	0x080015bc
 800081c:	080015dc 	.word	0x080015dc
 8000820:	0800159c 	.word	0x0800159c

08000824 <__swsetup_r>:
 8000824:	4b32      	ldr	r3, [pc, #200]	; (80008f0 <__swsetup_r+0xcc>)
 8000826:	b570      	push	{r4, r5, r6, lr}
 8000828:	681d      	ldr	r5, [r3, #0]
 800082a:	4606      	mov	r6, r0
 800082c:	460c      	mov	r4, r1
 800082e:	b125      	cbz	r5, 800083a <__swsetup_r+0x16>
 8000830:	69ab      	ldr	r3, [r5, #24]
 8000832:	b913      	cbnz	r3, 800083a <__swsetup_r+0x16>
 8000834:	4628      	mov	r0, r5
 8000836:	f000 f953 	bl	8000ae0 <__sinit>
 800083a:	4b2e      	ldr	r3, [pc, #184]	; (80008f4 <__swsetup_r+0xd0>)
 800083c:	429c      	cmp	r4, r3
 800083e:	d10f      	bne.n	8000860 <__swsetup_r+0x3c>
 8000840:	686c      	ldr	r4, [r5, #4]
 8000842:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000846:	b29a      	uxth	r2, r3
 8000848:	0715      	lsls	r5, r2, #28
 800084a:	d42c      	bmi.n	80008a6 <__swsetup_r+0x82>
 800084c:	06d0      	lsls	r0, r2, #27
 800084e:	d411      	bmi.n	8000874 <__swsetup_r+0x50>
 8000850:	2209      	movs	r2, #9
 8000852:	6032      	str	r2, [r6, #0]
 8000854:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000858:	81a3      	strh	r3, [r4, #12]
 800085a:	f04f 30ff 	mov.w	r0, #4294967295
 800085e:	e03e      	b.n	80008de <__swsetup_r+0xba>
 8000860:	4b25      	ldr	r3, [pc, #148]	; (80008f8 <__swsetup_r+0xd4>)
 8000862:	429c      	cmp	r4, r3
 8000864:	d101      	bne.n	800086a <__swsetup_r+0x46>
 8000866:	68ac      	ldr	r4, [r5, #8]
 8000868:	e7eb      	b.n	8000842 <__swsetup_r+0x1e>
 800086a:	4b24      	ldr	r3, [pc, #144]	; (80008fc <__swsetup_r+0xd8>)
 800086c:	429c      	cmp	r4, r3
 800086e:	bf08      	it	eq
 8000870:	68ec      	ldreq	r4, [r5, #12]
 8000872:	e7e6      	b.n	8000842 <__swsetup_r+0x1e>
 8000874:	0751      	lsls	r1, r2, #29
 8000876:	d512      	bpl.n	800089e <__swsetup_r+0x7a>
 8000878:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800087a:	b141      	cbz	r1, 800088e <__swsetup_r+0x6a>
 800087c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000880:	4299      	cmp	r1, r3
 8000882:	d002      	beq.n	800088a <__swsetup_r+0x66>
 8000884:	4630      	mov	r0, r6
 8000886:	f000 fa19 	bl	8000cbc <_free_r>
 800088a:	2300      	movs	r3, #0
 800088c:	6363      	str	r3, [r4, #52]	; 0x34
 800088e:	89a3      	ldrh	r3, [r4, #12]
 8000890:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000894:	81a3      	strh	r3, [r4, #12]
 8000896:	2300      	movs	r3, #0
 8000898:	6063      	str	r3, [r4, #4]
 800089a:	6923      	ldr	r3, [r4, #16]
 800089c:	6023      	str	r3, [r4, #0]
 800089e:	89a3      	ldrh	r3, [r4, #12]
 80008a0:	f043 0308 	orr.w	r3, r3, #8
 80008a4:	81a3      	strh	r3, [r4, #12]
 80008a6:	6923      	ldr	r3, [r4, #16]
 80008a8:	b94b      	cbnz	r3, 80008be <__swsetup_r+0x9a>
 80008aa:	89a3      	ldrh	r3, [r4, #12]
 80008ac:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80008b0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008b4:	d003      	beq.n	80008be <__swsetup_r+0x9a>
 80008b6:	4621      	mov	r1, r4
 80008b8:	4630      	mov	r0, r6
 80008ba:	f000 f9bf 	bl	8000c3c <__smakebuf_r>
 80008be:	89a2      	ldrh	r2, [r4, #12]
 80008c0:	f012 0301 	ands.w	r3, r2, #1
 80008c4:	d00c      	beq.n	80008e0 <__swsetup_r+0xbc>
 80008c6:	2300      	movs	r3, #0
 80008c8:	60a3      	str	r3, [r4, #8]
 80008ca:	6963      	ldr	r3, [r4, #20]
 80008cc:	425b      	negs	r3, r3
 80008ce:	61a3      	str	r3, [r4, #24]
 80008d0:	6923      	ldr	r3, [r4, #16]
 80008d2:	b953      	cbnz	r3, 80008ea <__swsetup_r+0xc6>
 80008d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008d8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80008dc:	d1ba      	bne.n	8000854 <__swsetup_r+0x30>
 80008de:	bd70      	pop	{r4, r5, r6, pc}
 80008e0:	0792      	lsls	r2, r2, #30
 80008e2:	bf58      	it	pl
 80008e4:	6963      	ldrpl	r3, [r4, #20]
 80008e6:	60a3      	str	r3, [r4, #8]
 80008e8:	e7f2      	b.n	80008d0 <__swsetup_r+0xac>
 80008ea:	2000      	movs	r0, #0
 80008ec:	e7f7      	b.n	80008de <__swsetup_r+0xba>
 80008ee:	bf00      	nop
 80008f0:	20000000 	.word	0x20000000
 80008f4:	080015bc 	.word	0x080015bc
 80008f8:	080015dc 	.word	0x080015dc
 80008fc:	0800159c 	.word	0x0800159c

08000900 <__sflush_r>:
 8000900:	898a      	ldrh	r2, [r1, #12]
 8000902:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000906:	4605      	mov	r5, r0
 8000908:	0710      	lsls	r0, r2, #28
 800090a:	460c      	mov	r4, r1
 800090c:	d458      	bmi.n	80009c0 <__sflush_r+0xc0>
 800090e:	684b      	ldr	r3, [r1, #4]
 8000910:	2b00      	cmp	r3, #0
 8000912:	dc05      	bgt.n	8000920 <__sflush_r+0x20>
 8000914:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000916:	2b00      	cmp	r3, #0
 8000918:	dc02      	bgt.n	8000920 <__sflush_r+0x20>
 800091a:	2000      	movs	r0, #0
 800091c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000920:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000922:	2e00      	cmp	r6, #0
 8000924:	d0f9      	beq.n	800091a <__sflush_r+0x1a>
 8000926:	2300      	movs	r3, #0
 8000928:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800092c:	682f      	ldr	r7, [r5, #0]
 800092e:	6a21      	ldr	r1, [r4, #32]
 8000930:	602b      	str	r3, [r5, #0]
 8000932:	d032      	beq.n	800099a <__sflush_r+0x9a>
 8000934:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000936:	89a3      	ldrh	r3, [r4, #12]
 8000938:	075a      	lsls	r2, r3, #29
 800093a:	d505      	bpl.n	8000948 <__sflush_r+0x48>
 800093c:	6863      	ldr	r3, [r4, #4]
 800093e:	1ac0      	subs	r0, r0, r3
 8000940:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000942:	b10b      	cbz	r3, 8000948 <__sflush_r+0x48>
 8000944:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000946:	1ac0      	subs	r0, r0, r3
 8000948:	2300      	movs	r3, #0
 800094a:	4602      	mov	r2, r0
 800094c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800094e:	6a21      	ldr	r1, [r4, #32]
 8000950:	4628      	mov	r0, r5
 8000952:	47b0      	blx	r6
 8000954:	1c43      	adds	r3, r0, #1
 8000956:	89a3      	ldrh	r3, [r4, #12]
 8000958:	d106      	bne.n	8000968 <__sflush_r+0x68>
 800095a:	6829      	ldr	r1, [r5, #0]
 800095c:	291d      	cmp	r1, #29
 800095e:	d848      	bhi.n	80009f2 <__sflush_r+0xf2>
 8000960:	4a29      	ldr	r2, [pc, #164]	; (8000a08 <__sflush_r+0x108>)
 8000962:	40ca      	lsrs	r2, r1
 8000964:	07d6      	lsls	r6, r2, #31
 8000966:	d544      	bpl.n	80009f2 <__sflush_r+0xf2>
 8000968:	2200      	movs	r2, #0
 800096a:	6062      	str	r2, [r4, #4]
 800096c:	04d9      	lsls	r1, r3, #19
 800096e:	6922      	ldr	r2, [r4, #16]
 8000970:	6022      	str	r2, [r4, #0]
 8000972:	d504      	bpl.n	800097e <__sflush_r+0x7e>
 8000974:	1c42      	adds	r2, r0, #1
 8000976:	d101      	bne.n	800097c <__sflush_r+0x7c>
 8000978:	682b      	ldr	r3, [r5, #0]
 800097a:	b903      	cbnz	r3, 800097e <__sflush_r+0x7e>
 800097c:	6560      	str	r0, [r4, #84]	; 0x54
 800097e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000980:	602f      	str	r7, [r5, #0]
 8000982:	2900      	cmp	r1, #0
 8000984:	d0c9      	beq.n	800091a <__sflush_r+0x1a>
 8000986:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800098a:	4299      	cmp	r1, r3
 800098c:	d002      	beq.n	8000994 <__sflush_r+0x94>
 800098e:	4628      	mov	r0, r5
 8000990:	f000 f994 	bl	8000cbc <_free_r>
 8000994:	2000      	movs	r0, #0
 8000996:	6360      	str	r0, [r4, #52]	; 0x34
 8000998:	e7c0      	b.n	800091c <__sflush_r+0x1c>
 800099a:	2301      	movs	r3, #1
 800099c:	4628      	mov	r0, r5
 800099e:	47b0      	blx	r6
 80009a0:	1c41      	adds	r1, r0, #1
 80009a2:	d1c8      	bne.n	8000936 <__sflush_r+0x36>
 80009a4:	682b      	ldr	r3, [r5, #0]
 80009a6:	2b00      	cmp	r3, #0
 80009a8:	d0c5      	beq.n	8000936 <__sflush_r+0x36>
 80009aa:	2b1d      	cmp	r3, #29
 80009ac:	d001      	beq.n	80009b2 <__sflush_r+0xb2>
 80009ae:	2b16      	cmp	r3, #22
 80009b0:	d101      	bne.n	80009b6 <__sflush_r+0xb6>
 80009b2:	602f      	str	r7, [r5, #0]
 80009b4:	e7b1      	b.n	800091a <__sflush_r+0x1a>
 80009b6:	89a3      	ldrh	r3, [r4, #12]
 80009b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009bc:	81a3      	strh	r3, [r4, #12]
 80009be:	e7ad      	b.n	800091c <__sflush_r+0x1c>
 80009c0:	690f      	ldr	r7, [r1, #16]
 80009c2:	2f00      	cmp	r7, #0
 80009c4:	d0a9      	beq.n	800091a <__sflush_r+0x1a>
 80009c6:	0793      	lsls	r3, r2, #30
 80009c8:	680e      	ldr	r6, [r1, #0]
 80009ca:	bf08      	it	eq
 80009cc:	694b      	ldreq	r3, [r1, #20]
 80009ce:	600f      	str	r7, [r1, #0]
 80009d0:	bf18      	it	ne
 80009d2:	2300      	movne	r3, #0
 80009d4:	eba6 0807 	sub.w	r8, r6, r7
 80009d8:	608b      	str	r3, [r1, #8]
 80009da:	f1b8 0f00 	cmp.w	r8, #0
 80009de:	dd9c      	ble.n	800091a <__sflush_r+0x1a>
 80009e0:	4643      	mov	r3, r8
 80009e2:	463a      	mov	r2, r7
 80009e4:	6a21      	ldr	r1, [r4, #32]
 80009e6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80009e8:	4628      	mov	r0, r5
 80009ea:	47b0      	blx	r6
 80009ec:	2800      	cmp	r0, #0
 80009ee:	dc06      	bgt.n	80009fe <__sflush_r+0xfe>
 80009f0:	89a3      	ldrh	r3, [r4, #12]
 80009f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009f6:	81a3      	strh	r3, [r4, #12]
 80009f8:	f04f 30ff 	mov.w	r0, #4294967295
 80009fc:	e78e      	b.n	800091c <__sflush_r+0x1c>
 80009fe:	4407      	add	r7, r0
 8000a00:	eba8 0800 	sub.w	r8, r8, r0
 8000a04:	e7e9      	b.n	80009da <__sflush_r+0xda>
 8000a06:	bf00      	nop
 8000a08:	20400001 	.word	0x20400001

08000a0c <_fflush_r>:
 8000a0c:	b538      	push	{r3, r4, r5, lr}
 8000a0e:	690b      	ldr	r3, [r1, #16]
 8000a10:	4605      	mov	r5, r0
 8000a12:	460c      	mov	r4, r1
 8000a14:	b1db      	cbz	r3, 8000a4e <_fflush_r+0x42>
 8000a16:	b118      	cbz	r0, 8000a20 <_fflush_r+0x14>
 8000a18:	6983      	ldr	r3, [r0, #24]
 8000a1a:	b90b      	cbnz	r3, 8000a20 <_fflush_r+0x14>
 8000a1c:	f000 f860 	bl	8000ae0 <__sinit>
 8000a20:	4b0c      	ldr	r3, [pc, #48]	; (8000a54 <_fflush_r+0x48>)
 8000a22:	429c      	cmp	r4, r3
 8000a24:	d109      	bne.n	8000a3a <_fflush_r+0x2e>
 8000a26:	686c      	ldr	r4, [r5, #4]
 8000a28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a2c:	b17b      	cbz	r3, 8000a4e <_fflush_r+0x42>
 8000a2e:	4621      	mov	r1, r4
 8000a30:	4628      	mov	r0, r5
 8000a32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a36:	f7ff bf63 	b.w	8000900 <__sflush_r>
 8000a3a:	4b07      	ldr	r3, [pc, #28]	; (8000a58 <_fflush_r+0x4c>)
 8000a3c:	429c      	cmp	r4, r3
 8000a3e:	d101      	bne.n	8000a44 <_fflush_r+0x38>
 8000a40:	68ac      	ldr	r4, [r5, #8]
 8000a42:	e7f1      	b.n	8000a28 <_fflush_r+0x1c>
 8000a44:	4b05      	ldr	r3, [pc, #20]	; (8000a5c <_fflush_r+0x50>)
 8000a46:	429c      	cmp	r4, r3
 8000a48:	bf08      	it	eq
 8000a4a:	68ec      	ldreq	r4, [r5, #12]
 8000a4c:	e7ec      	b.n	8000a28 <_fflush_r+0x1c>
 8000a4e:	2000      	movs	r0, #0
 8000a50:	bd38      	pop	{r3, r4, r5, pc}
 8000a52:	bf00      	nop
 8000a54:	080015bc 	.word	0x080015bc
 8000a58:	080015dc 	.word	0x080015dc
 8000a5c:	0800159c 	.word	0x0800159c

08000a60 <std>:
 8000a60:	2300      	movs	r3, #0
 8000a62:	b510      	push	{r4, lr}
 8000a64:	4604      	mov	r4, r0
 8000a66:	e9c0 3300 	strd	r3, r3, [r0]
 8000a6a:	6083      	str	r3, [r0, #8]
 8000a6c:	8181      	strh	r1, [r0, #12]
 8000a6e:	6643      	str	r3, [r0, #100]	; 0x64
 8000a70:	81c2      	strh	r2, [r0, #14]
 8000a72:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a76:	6183      	str	r3, [r0, #24]
 8000a78:	4619      	mov	r1, r3
 8000a7a:	2208      	movs	r2, #8
 8000a7c:	305c      	adds	r0, #92	; 0x5c
 8000a7e:	f7ff fdfb 	bl	8000678 <memset>
 8000a82:	4b05      	ldr	r3, [pc, #20]	; (8000a98 <std+0x38>)
 8000a84:	6263      	str	r3, [r4, #36]	; 0x24
 8000a86:	4b05      	ldr	r3, [pc, #20]	; (8000a9c <std+0x3c>)
 8000a88:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a8a:	4b05      	ldr	r3, [pc, #20]	; (8000aa0 <std+0x40>)
 8000a8c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a8e:	4b05      	ldr	r3, [pc, #20]	; (8000aa4 <std+0x44>)
 8000a90:	6224      	str	r4, [r4, #32]
 8000a92:	6323      	str	r3, [r4, #48]	; 0x30
 8000a94:	bd10      	pop	{r4, pc}
 8000a96:	bf00      	nop
 8000a98:	080013b9 	.word	0x080013b9
 8000a9c:	080013db 	.word	0x080013db
 8000aa0:	08001413 	.word	0x08001413
 8000aa4:	08001437 	.word	0x08001437

08000aa8 <_cleanup_r>:
 8000aa8:	4901      	ldr	r1, [pc, #4]	; (8000ab0 <_cleanup_r+0x8>)
 8000aaa:	f000 b885 	b.w	8000bb8 <_fwalk_reent>
 8000aae:	bf00      	nop
 8000ab0:	08000a0d 	.word	0x08000a0d

08000ab4 <__sfmoreglue>:
 8000ab4:	b570      	push	{r4, r5, r6, lr}
 8000ab6:	1e4a      	subs	r2, r1, #1
 8000ab8:	2568      	movs	r5, #104	; 0x68
 8000aba:	4355      	muls	r5, r2
 8000abc:	460e      	mov	r6, r1
 8000abe:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000ac2:	f000 f949 	bl	8000d58 <_malloc_r>
 8000ac6:	4604      	mov	r4, r0
 8000ac8:	b140      	cbz	r0, 8000adc <__sfmoreglue+0x28>
 8000aca:	2100      	movs	r1, #0
 8000acc:	e9c0 1600 	strd	r1, r6, [r0]
 8000ad0:	300c      	adds	r0, #12
 8000ad2:	60a0      	str	r0, [r4, #8]
 8000ad4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000ad8:	f7ff fdce 	bl	8000678 <memset>
 8000adc:	4620      	mov	r0, r4
 8000ade:	bd70      	pop	{r4, r5, r6, pc}

08000ae0 <__sinit>:
 8000ae0:	6983      	ldr	r3, [r0, #24]
 8000ae2:	b510      	push	{r4, lr}
 8000ae4:	4604      	mov	r4, r0
 8000ae6:	bb33      	cbnz	r3, 8000b36 <__sinit+0x56>
 8000ae8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000aec:	6503      	str	r3, [r0, #80]	; 0x50
 8000aee:	4b12      	ldr	r3, [pc, #72]	; (8000b38 <__sinit+0x58>)
 8000af0:	4a12      	ldr	r2, [pc, #72]	; (8000b3c <__sinit+0x5c>)
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	6282      	str	r2, [r0, #40]	; 0x28
 8000af6:	4298      	cmp	r0, r3
 8000af8:	bf04      	itt	eq
 8000afa:	2301      	moveq	r3, #1
 8000afc:	6183      	streq	r3, [r0, #24]
 8000afe:	f000 f81f 	bl	8000b40 <__sfp>
 8000b02:	6060      	str	r0, [r4, #4]
 8000b04:	4620      	mov	r0, r4
 8000b06:	f000 f81b 	bl	8000b40 <__sfp>
 8000b0a:	60a0      	str	r0, [r4, #8]
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f000 f817 	bl	8000b40 <__sfp>
 8000b12:	2200      	movs	r2, #0
 8000b14:	60e0      	str	r0, [r4, #12]
 8000b16:	2104      	movs	r1, #4
 8000b18:	6860      	ldr	r0, [r4, #4]
 8000b1a:	f7ff ffa1 	bl	8000a60 <std>
 8000b1e:	2201      	movs	r2, #1
 8000b20:	2109      	movs	r1, #9
 8000b22:	68a0      	ldr	r0, [r4, #8]
 8000b24:	f7ff ff9c 	bl	8000a60 <std>
 8000b28:	2202      	movs	r2, #2
 8000b2a:	2112      	movs	r1, #18
 8000b2c:	68e0      	ldr	r0, [r4, #12]
 8000b2e:	f7ff ff97 	bl	8000a60 <std>
 8000b32:	2301      	movs	r3, #1
 8000b34:	61a3      	str	r3, [r4, #24]
 8000b36:	bd10      	pop	{r4, pc}
 8000b38:	08001598 	.word	0x08001598
 8000b3c:	08000aa9 	.word	0x08000aa9

08000b40 <__sfp>:
 8000b40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b42:	4b1b      	ldr	r3, [pc, #108]	; (8000bb0 <__sfp+0x70>)
 8000b44:	681e      	ldr	r6, [r3, #0]
 8000b46:	69b3      	ldr	r3, [r6, #24]
 8000b48:	4607      	mov	r7, r0
 8000b4a:	b913      	cbnz	r3, 8000b52 <__sfp+0x12>
 8000b4c:	4630      	mov	r0, r6
 8000b4e:	f7ff ffc7 	bl	8000ae0 <__sinit>
 8000b52:	3648      	adds	r6, #72	; 0x48
 8000b54:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b58:	3b01      	subs	r3, #1
 8000b5a:	d503      	bpl.n	8000b64 <__sfp+0x24>
 8000b5c:	6833      	ldr	r3, [r6, #0]
 8000b5e:	b133      	cbz	r3, 8000b6e <__sfp+0x2e>
 8000b60:	6836      	ldr	r6, [r6, #0]
 8000b62:	e7f7      	b.n	8000b54 <__sfp+0x14>
 8000b64:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b68:	b16d      	cbz	r5, 8000b86 <__sfp+0x46>
 8000b6a:	3468      	adds	r4, #104	; 0x68
 8000b6c:	e7f4      	b.n	8000b58 <__sfp+0x18>
 8000b6e:	2104      	movs	r1, #4
 8000b70:	4638      	mov	r0, r7
 8000b72:	f7ff ff9f 	bl	8000ab4 <__sfmoreglue>
 8000b76:	6030      	str	r0, [r6, #0]
 8000b78:	2800      	cmp	r0, #0
 8000b7a:	d1f1      	bne.n	8000b60 <__sfp+0x20>
 8000b7c:	230c      	movs	r3, #12
 8000b7e:	603b      	str	r3, [r7, #0]
 8000b80:	4604      	mov	r4, r0
 8000b82:	4620      	mov	r0, r4
 8000b84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b86:	4b0b      	ldr	r3, [pc, #44]	; (8000bb4 <__sfp+0x74>)
 8000b88:	6665      	str	r5, [r4, #100]	; 0x64
 8000b8a:	e9c4 5500 	strd	r5, r5, [r4]
 8000b8e:	60a5      	str	r5, [r4, #8]
 8000b90:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b94:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b98:	2208      	movs	r2, #8
 8000b9a:	4629      	mov	r1, r5
 8000b9c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000ba0:	f7ff fd6a 	bl	8000678 <memset>
 8000ba4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000ba8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000bac:	e7e9      	b.n	8000b82 <__sfp+0x42>
 8000bae:	bf00      	nop
 8000bb0:	08001598 	.word	0x08001598
 8000bb4:	ffff0001 	.word	0xffff0001

08000bb8 <_fwalk_reent>:
 8000bb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bbc:	4680      	mov	r8, r0
 8000bbe:	4689      	mov	r9, r1
 8000bc0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000bc4:	2600      	movs	r6, #0
 8000bc6:	b914      	cbnz	r4, 8000bce <_fwalk_reent+0x16>
 8000bc8:	4630      	mov	r0, r6
 8000bca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bce:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000bd2:	3f01      	subs	r7, #1
 8000bd4:	d501      	bpl.n	8000bda <_fwalk_reent+0x22>
 8000bd6:	6824      	ldr	r4, [r4, #0]
 8000bd8:	e7f5      	b.n	8000bc6 <_fwalk_reent+0xe>
 8000bda:	89ab      	ldrh	r3, [r5, #12]
 8000bdc:	2b01      	cmp	r3, #1
 8000bde:	d907      	bls.n	8000bf0 <_fwalk_reent+0x38>
 8000be0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000be4:	3301      	adds	r3, #1
 8000be6:	d003      	beq.n	8000bf0 <_fwalk_reent+0x38>
 8000be8:	4629      	mov	r1, r5
 8000bea:	4640      	mov	r0, r8
 8000bec:	47c8      	blx	r9
 8000bee:	4306      	orrs	r6, r0
 8000bf0:	3568      	adds	r5, #104	; 0x68
 8000bf2:	e7ee      	b.n	8000bd2 <_fwalk_reent+0x1a>

08000bf4 <__swhatbuf_r>:
 8000bf4:	b570      	push	{r4, r5, r6, lr}
 8000bf6:	460e      	mov	r6, r1
 8000bf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bfc:	2900      	cmp	r1, #0
 8000bfe:	b096      	sub	sp, #88	; 0x58
 8000c00:	4614      	mov	r4, r2
 8000c02:	461d      	mov	r5, r3
 8000c04:	da07      	bge.n	8000c16 <__swhatbuf_r+0x22>
 8000c06:	2300      	movs	r3, #0
 8000c08:	602b      	str	r3, [r5, #0]
 8000c0a:	89b3      	ldrh	r3, [r6, #12]
 8000c0c:	061a      	lsls	r2, r3, #24
 8000c0e:	d410      	bmi.n	8000c32 <__swhatbuf_r+0x3e>
 8000c10:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c14:	e00e      	b.n	8000c34 <__swhatbuf_r+0x40>
 8000c16:	466a      	mov	r2, sp
 8000c18:	f000 fc34 	bl	8001484 <_fstat_r>
 8000c1c:	2800      	cmp	r0, #0
 8000c1e:	dbf2      	blt.n	8000c06 <__swhatbuf_r+0x12>
 8000c20:	9a01      	ldr	r2, [sp, #4]
 8000c22:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c26:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c2a:	425a      	negs	r2, r3
 8000c2c:	415a      	adcs	r2, r3
 8000c2e:	602a      	str	r2, [r5, #0]
 8000c30:	e7ee      	b.n	8000c10 <__swhatbuf_r+0x1c>
 8000c32:	2340      	movs	r3, #64	; 0x40
 8000c34:	2000      	movs	r0, #0
 8000c36:	6023      	str	r3, [r4, #0]
 8000c38:	b016      	add	sp, #88	; 0x58
 8000c3a:	bd70      	pop	{r4, r5, r6, pc}

08000c3c <__smakebuf_r>:
 8000c3c:	898b      	ldrh	r3, [r1, #12]
 8000c3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c40:	079d      	lsls	r5, r3, #30
 8000c42:	4606      	mov	r6, r0
 8000c44:	460c      	mov	r4, r1
 8000c46:	d507      	bpl.n	8000c58 <__smakebuf_r+0x1c>
 8000c48:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c4c:	6023      	str	r3, [r4, #0]
 8000c4e:	6123      	str	r3, [r4, #16]
 8000c50:	2301      	movs	r3, #1
 8000c52:	6163      	str	r3, [r4, #20]
 8000c54:	b002      	add	sp, #8
 8000c56:	bd70      	pop	{r4, r5, r6, pc}
 8000c58:	ab01      	add	r3, sp, #4
 8000c5a:	466a      	mov	r2, sp
 8000c5c:	f7ff ffca 	bl	8000bf4 <__swhatbuf_r>
 8000c60:	9900      	ldr	r1, [sp, #0]
 8000c62:	4605      	mov	r5, r0
 8000c64:	4630      	mov	r0, r6
 8000c66:	f000 f877 	bl	8000d58 <_malloc_r>
 8000c6a:	b948      	cbnz	r0, 8000c80 <__smakebuf_r+0x44>
 8000c6c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c70:	059a      	lsls	r2, r3, #22
 8000c72:	d4ef      	bmi.n	8000c54 <__smakebuf_r+0x18>
 8000c74:	f023 0303 	bic.w	r3, r3, #3
 8000c78:	f043 0302 	orr.w	r3, r3, #2
 8000c7c:	81a3      	strh	r3, [r4, #12]
 8000c7e:	e7e3      	b.n	8000c48 <__smakebuf_r+0xc>
 8000c80:	4b0d      	ldr	r3, [pc, #52]	; (8000cb8 <__smakebuf_r+0x7c>)
 8000c82:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c84:	89a3      	ldrh	r3, [r4, #12]
 8000c86:	6020      	str	r0, [r4, #0]
 8000c88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c8c:	81a3      	strh	r3, [r4, #12]
 8000c8e:	9b00      	ldr	r3, [sp, #0]
 8000c90:	6163      	str	r3, [r4, #20]
 8000c92:	9b01      	ldr	r3, [sp, #4]
 8000c94:	6120      	str	r0, [r4, #16]
 8000c96:	b15b      	cbz	r3, 8000cb0 <__smakebuf_r+0x74>
 8000c98:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c9c:	4630      	mov	r0, r6
 8000c9e:	f000 fc03 	bl	80014a8 <_isatty_r>
 8000ca2:	b128      	cbz	r0, 8000cb0 <__smakebuf_r+0x74>
 8000ca4:	89a3      	ldrh	r3, [r4, #12]
 8000ca6:	f023 0303 	bic.w	r3, r3, #3
 8000caa:	f043 0301 	orr.w	r3, r3, #1
 8000cae:	81a3      	strh	r3, [r4, #12]
 8000cb0:	89a3      	ldrh	r3, [r4, #12]
 8000cb2:	431d      	orrs	r5, r3
 8000cb4:	81a5      	strh	r5, [r4, #12]
 8000cb6:	e7cd      	b.n	8000c54 <__smakebuf_r+0x18>
 8000cb8:	08000aa9 	.word	0x08000aa9

08000cbc <_free_r>:
 8000cbc:	b538      	push	{r3, r4, r5, lr}
 8000cbe:	4605      	mov	r5, r0
 8000cc0:	2900      	cmp	r1, #0
 8000cc2:	d045      	beq.n	8000d50 <_free_r+0x94>
 8000cc4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000cc8:	1f0c      	subs	r4, r1, #4
 8000cca:	2b00      	cmp	r3, #0
 8000ccc:	bfb8      	it	lt
 8000cce:	18e4      	addlt	r4, r4, r3
 8000cd0:	f000 fc0c 	bl	80014ec <__malloc_lock>
 8000cd4:	4a1f      	ldr	r2, [pc, #124]	; (8000d54 <_free_r+0x98>)
 8000cd6:	6813      	ldr	r3, [r2, #0]
 8000cd8:	4610      	mov	r0, r2
 8000cda:	b933      	cbnz	r3, 8000cea <_free_r+0x2e>
 8000cdc:	6063      	str	r3, [r4, #4]
 8000cde:	6014      	str	r4, [r2, #0]
 8000ce0:	4628      	mov	r0, r5
 8000ce2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ce6:	f000 bc02 	b.w	80014ee <__malloc_unlock>
 8000cea:	42a3      	cmp	r3, r4
 8000cec:	d90c      	bls.n	8000d08 <_free_r+0x4c>
 8000cee:	6821      	ldr	r1, [r4, #0]
 8000cf0:	1862      	adds	r2, r4, r1
 8000cf2:	4293      	cmp	r3, r2
 8000cf4:	bf04      	itt	eq
 8000cf6:	681a      	ldreq	r2, [r3, #0]
 8000cf8:	685b      	ldreq	r3, [r3, #4]
 8000cfa:	6063      	str	r3, [r4, #4]
 8000cfc:	bf04      	itt	eq
 8000cfe:	1852      	addeq	r2, r2, r1
 8000d00:	6022      	streq	r2, [r4, #0]
 8000d02:	6004      	str	r4, [r0, #0]
 8000d04:	e7ec      	b.n	8000ce0 <_free_r+0x24>
 8000d06:	4613      	mov	r3, r2
 8000d08:	685a      	ldr	r2, [r3, #4]
 8000d0a:	b10a      	cbz	r2, 8000d10 <_free_r+0x54>
 8000d0c:	42a2      	cmp	r2, r4
 8000d0e:	d9fa      	bls.n	8000d06 <_free_r+0x4a>
 8000d10:	6819      	ldr	r1, [r3, #0]
 8000d12:	1858      	adds	r0, r3, r1
 8000d14:	42a0      	cmp	r0, r4
 8000d16:	d10b      	bne.n	8000d30 <_free_r+0x74>
 8000d18:	6820      	ldr	r0, [r4, #0]
 8000d1a:	4401      	add	r1, r0
 8000d1c:	1858      	adds	r0, r3, r1
 8000d1e:	4282      	cmp	r2, r0
 8000d20:	6019      	str	r1, [r3, #0]
 8000d22:	d1dd      	bne.n	8000ce0 <_free_r+0x24>
 8000d24:	6810      	ldr	r0, [r2, #0]
 8000d26:	6852      	ldr	r2, [r2, #4]
 8000d28:	605a      	str	r2, [r3, #4]
 8000d2a:	4401      	add	r1, r0
 8000d2c:	6019      	str	r1, [r3, #0]
 8000d2e:	e7d7      	b.n	8000ce0 <_free_r+0x24>
 8000d30:	d902      	bls.n	8000d38 <_free_r+0x7c>
 8000d32:	230c      	movs	r3, #12
 8000d34:	602b      	str	r3, [r5, #0]
 8000d36:	e7d3      	b.n	8000ce0 <_free_r+0x24>
 8000d38:	6820      	ldr	r0, [r4, #0]
 8000d3a:	1821      	adds	r1, r4, r0
 8000d3c:	428a      	cmp	r2, r1
 8000d3e:	bf04      	itt	eq
 8000d40:	6811      	ldreq	r1, [r2, #0]
 8000d42:	6852      	ldreq	r2, [r2, #4]
 8000d44:	6062      	str	r2, [r4, #4]
 8000d46:	bf04      	itt	eq
 8000d48:	1809      	addeq	r1, r1, r0
 8000d4a:	6021      	streq	r1, [r4, #0]
 8000d4c:	605c      	str	r4, [r3, #4]
 8000d4e:	e7c7      	b.n	8000ce0 <_free_r+0x24>
 8000d50:	bd38      	pop	{r3, r4, r5, pc}
 8000d52:	bf00      	nop
 8000d54:	20000084 	.word	0x20000084

08000d58 <_malloc_r>:
 8000d58:	b570      	push	{r4, r5, r6, lr}
 8000d5a:	1ccd      	adds	r5, r1, #3
 8000d5c:	f025 0503 	bic.w	r5, r5, #3
 8000d60:	3508      	adds	r5, #8
 8000d62:	2d0c      	cmp	r5, #12
 8000d64:	bf38      	it	cc
 8000d66:	250c      	movcc	r5, #12
 8000d68:	2d00      	cmp	r5, #0
 8000d6a:	4606      	mov	r6, r0
 8000d6c:	db01      	blt.n	8000d72 <_malloc_r+0x1a>
 8000d6e:	42a9      	cmp	r1, r5
 8000d70:	d903      	bls.n	8000d7a <_malloc_r+0x22>
 8000d72:	230c      	movs	r3, #12
 8000d74:	6033      	str	r3, [r6, #0]
 8000d76:	2000      	movs	r0, #0
 8000d78:	bd70      	pop	{r4, r5, r6, pc}
 8000d7a:	f000 fbb7 	bl	80014ec <__malloc_lock>
 8000d7e:	4a21      	ldr	r2, [pc, #132]	; (8000e04 <_malloc_r+0xac>)
 8000d80:	6814      	ldr	r4, [r2, #0]
 8000d82:	4621      	mov	r1, r4
 8000d84:	b991      	cbnz	r1, 8000dac <_malloc_r+0x54>
 8000d86:	4c20      	ldr	r4, [pc, #128]	; (8000e08 <_malloc_r+0xb0>)
 8000d88:	6823      	ldr	r3, [r4, #0]
 8000d8a:	b91b      	cbnz	r3, 8000d94 <_malloc_r+0x3c>
 8000d8c:	4630      	mov	r0, r6
 8000d8e:	f000 fb03 	bl	8001398 <_sbrk_r>
 8000d92:	6020      	str	r0, [r4, #0]
 8000d94:	4629      	mov	r1, r5
 8000d96:	4630      	mov	r0, r6
 8000d98:	f000 fafe 	bl	8001398 <_sbrk_r>
 8000d9c:	1c43      	adds	r3, r0, #1
 8000d9e:	d124      	bne.n	8000dea <_malloc_r+0x92>
 8000da0:	230c      	movs	r3, #12
 8000da2:	6033      	str	r3, [r6, #0]
 8000da4:	4630      	mov	r0, r6
 8000da6:	f000 fba2 	bl	80014ee <__malloc_unlock>
 8000daa:	e7e4      	b.n	8000d76 <_malloc_r+0x1e>
 8000dac:	680b      	ldr	r3, [r1, #0]
 8000dae:	1b5b      	subs	r3, r3, r5
 8000db0:	d418      	bmi.n	8000de4 <_malloc_r+0x8c>
 8000db2:	2b0b      	cmp	r3, #11
 8000db4:	d90f      	bls.n	8000dd6 <_malloc_r+0x7e>
 8000db6:	600b      	str	r3, [r1, #0]
 8000db8:	50cd      	str	r5, [r1, r3]
 8000dba:	18cc      	adds	r4, r1, r3
 8000dbc:	4630      	mov	r0, r6
 8000dbe:	f000 fb96 	bl	80014ee <__malloc_unlock>
 8000dc2:	f104 000b 	add.w	r0, r4, #11
 8000dc6:	1d23      	adds	r3, r4, #4
 8000dc8:	f020 0007 	bic.w	r0, r0, #7
 8000dcc:	1ac3      	subs	r3, r0, r3
 8000dce:	d0d3      	beq.n	8000d78 <_malloc_r+0x20>
 8000dd0:	425a      	negs	r2, r3
 8000dd2:	50e2      	str	r2, [r4, r3]
 8000dd4:	e7d0      	b.n	8000d78 <_malloc_r+0x20>
 8000dd6:	428c      	cmp	r4, r1
 8000dd8:	684b      	ldr	r3, [r1, #4]
 8000dda:	bf16      	itet	ne
 8000ddc:	6063      	strne	r3, [r4, #4]
 8000dde:	6013      	streq	r3, [r2, #0]
 8000de0:	460c      	movne	r4, r1
 8000de2:	e7eb      	b.n	8000dbc <_malloc_r+0x64>
 8000de4:	460c      	mov	r4, r1
 8000de6:	6849      	ldr	r1, [r1, #4]
 8000de8:	e7cc      	b.n	8000d84 <_malloc_r+0x2c>
 8000dea:	1cc4      	adds	r4, r0, #3
 8000dec:	f024 0403 	bic.w	r4, r4, #3
 8000df0:	42a0      	cmp	r0, r4
 8000df2:	d005      	beq.n	8000e00 <_malloc_r+0xa8>
 8000df4:	1a21      	subs	r1, r4, r0
 8000df6:	4630      	mov	r0, r6
 8000df8:	f000 face 	bl	8001398 <_sbrk_r>
 8000dfc:	3001      	adds	r0, #1
 8000dfe:	d0cf      	beq.n	8000da0 <_malloc_r+0x48>
 8000e00:	6025      	str	r5, [r4, #0]
 8000e02:	e7db      	b.n	8000dbc <_malloc_r+0x64>
 8000e04:	20000084 	.word	0x20000084
 8000e08:	20000088 	.word	0x20000088

08000e0c <__sfputc_r>:
 8000e0c:	6893      	ldr	r3, [r2, #8]
 8000e0e:	3b01      	subs	r3, #1
 8000e10:	2b00      	cmp	r3, #0
 8000e12:	b410      	push	{r4}
 8000e14:	6093      	str	r3, [r2, #8]
 8000e16:	da07      	bge.n	8000e28 <__sfputc_r+0x1c>
 8000e18:	6994      	ldr	r4, [r2, #24]
 8000e1a:	42a3      	cmp	r3, r4
 8000e1c:	db01      	blt.n	8000e22 <__sfputc_r+0x16>
 8000e1e:	290a      	cmp	r1, #10
 8000e20:	d102      	bne.n	8000e28 <__sfputc_r+0x1c>
 8000e22:	bc10      	pop	{r4}
 8000e24:	f7ff bcac 	b.w	8000780 <__swbuf_r>
 8000e28:	6813      	ldr	r3, [r2, #0]
 8000e2a:	1c58      	adds	r0, r3, #1
 8000e2c:	6010      	str	r0, [r2, #0]
 8000e2e:	7019      	strb	r1, [r3, #0]
 8000e30:	4608      	mov	r0, r1
 8000e32:	bc10      	pop	{r4}
 8000e34:	4770      	bx	lr

08000e36 <__sfputs_r>:
 8000e36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e38:	4606      	mov	r6, r0
 8000e3a:	460f      	mov	r7, r1
 8000e3c:	4614      	mov	r4, r2
 8000e3e:	18d5      	adds	r5, r2, r3
 8000e40:	42ac      	cmp	r4, r5
 8000e42:	d101      	bne.n	8000e48 <__sfputs_r+0x12>
 8000e44:	2000      	movs	r0, #0
 8000e46:	e007      	b.n	8000e58 <__sfputs_r+0x22>
 8000e48:	463a      	mov	r2, r7
 8000e4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e4e:	4630      	mov	r0, r6
 8000e50:	f7ff ffdc 	bl	8000e0c <__sfputc_r>
 8000e54:	1c43      	adds	r3, r0, #1
 8000e56:	d1f3      	bne.n	8000e40 <__sfputs_r+0xa>
 8000e58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e5c <_vfiprintf_r>:
 8000e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e60:	460c      	mov	r4, r1
 8000e62:	b09d      	sub	sp, #116	; 0x74
 8000e64:	4617      	mov	r7, r2
 8000e66:	461d      	mov	r5, r3
 8000e68:	4606      	mov	r6, r0
 8000e6a:	b118      	cbz	r0, 8000e74 <_vfiprintf_r+0x18>
 8000e6c:	6983      	ldr	r3, [r0, #24]
 8000e6e:	b90b      	cbnz	r3, 8000e74 <_vfiprintf_r+0x18>
 8000e70:	f7ff fe36 	bl	8000ae0 <__sinit>
 8000e74:	4b7c      	ldr	r3, [pc, #496]	; (8001068 <_vfiprintf_r+0x20c>)
 8000e76:	429c      	cmp	r4, r3
 8000e78:	d158      	bne.n	8000f2c <_vfiprintf_r+0xd0>
 8000e7a:	6874      	ldr	r4, [r6, #4]
 8000e7c:	89a3      	ldrh	r3, [r4, #12]
 8000e7e:	0718      	lsls	r0, r3, #28
 8000e80:	d55e      	bpl.n	8000f40 <_vfiprintf_r+0xe4>
 8000e82:	6923      	ldr	r3, [r4, #16]
 8000e84:	2b00      	cmp	r3, #0
 8000e86:	d05b      	beq.n	8000f40 <_vfiprintf_r+0xe4>
 8000e88:	2300      	movs	r3, #0
 8000e8a:	9309      	str	r3, [sp, #36]	; 0x24
 8000e8c:	2320      	movs	r3, #32
 8000e8e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e92:	2330      	movs	r3, #48	; 0x30
 8000e94:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e98:	9503      	str	r5, [sp, #12]
 8000e9a:	f04f 0b01 	mov.w	fp, #1
 8000e9e:	46b8      	mov	r8, r7
 8000ea0:	4645      	mov	r5, r8
 8000ea2:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000ea6:	b10b      	cbz	r3, 8000eac <_vfiprintf_r+0x50>
 8000ea8:	2b25      	cmp	r3, #37	; 0x25
 8000eaa:	d154      	bne.n	8000f56 <_vfiprintf_r+0xfa>
 8000eac:	ebb8 0a07 	subs.w	sl, r8, r7
 8000eb0:	d00b      	beq.n	8000eca <_vfiprintf_r+0x6e>
 8000eb2:	4653      	mov	r3, sl
 8000eb4:	463a      	mov	r2, r7
 8000eb6:	4621      	mov	r1, r4
 8000eb8:	4630      	mov	r0, r6
 8000eba:	f7ff ffbc 	bl	8000e36 <__sfputs_r>
 8000ebe:	3001      	adds	r0, #1
 8000ec0:	f000 80c2 	beq.w	8001048 <_vfiprintf_r+0x1ec>
 8000ec4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ec6:	4453      	add	r3, sl
 8000ec8:	9309      	str	r3, [sp, #36]	; 0x24
 8000eca:	f898 3000 	ldrb.w	r3, [r8]
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	f000 80ba 	beq.w	8001048 <_vfiprintf_r+0x1ec>
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	f04f 32ff 	mov.w	r2, #4294967295
 8000eda:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ede:	9304      	str	r3, [sp, #16]
 8000ee0:	9307      	str	r3, [sp, #28]
 8000ee2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ee6:	931a      	str	r3, [sp, #104]	; 0x68
 8000ee8:	46a8      	mov	r8, r5
 8000eea:	2205      	movs	r2, #5
 8000eec:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000ef0:	485e      	ldr	r0, [pc, #376]	; (800106c <_vfiprintf_r+0x210>)
 8000ef2:	f7ff f98d 	bl	8000210 <memchr>
 8000ef6:	9b04      	ldr	r3, [sp, #16]
 8000ef8:	bb78      	cbnz	r0, 8000f5a <_vfiprintf_r+0xfe>
 8000efa:	06d9      	lsls	r1, r3, #27
 8000efc:	bf44      	itt	mi
 8000efe:	2220      	movmi	r2, #32
 8000f00:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000f04:	071a      	lsls	r2, r3, #28
 8000f06:	bf44      	itt	mi
 8000f08:	222b      	movmi	r2, #43	; 0x2b
 8000f0a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000f0e:	782a      	ldrb	r2, [r5, #0]
 8000f10:	2a2a      	cmp	r2, #42	; 0x2a
 8000f12:	d02a      	beq.n	8000f6a <_vfiprintf_r+0x10e>
 8000f14:	9a07      	ldr	r2, [sp, #28]
 8000f16:	46a8      	mov	r8, r5
 8000f18:	2000      	movs	r0, #0
 8000f1a:	250a      	movs	r5, #10
 8000f1c:	4641      	mov	r1, r8
 8000f1e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f22:	3b30      	subs	r3, #48	; 0x30
 8000f24:	2b09      	cmp	r3, #9
 8000f26:	d969      	bls.n	8000ffc <_vfiprintf_r+0x1a0>
 8000f28:	b360      	cbz	r0, 8000f84 <_vfiprintf_r+0x128>
 8000f2a:	e024      	b.n	8000f76 <_vfiprintf_r+0x11a>
 8000f2c:	4b50      	ldr	r3, [pc, #320]	; (8001070 <_vfiprintf_r+0x214>)
 8000f2e:	429c      	cmp	r4, r3
 8000f30:	d101      	bne.n	8000f36 <_vfiprintf_r+0xda>
 8000f32:	68b4      	ldr	r4, [r6, #8]
 8000f34:	e7a2      	b.n	8000e7c <_vfiprintf_r+0x20>
 8000f36:	4b4f      	ldr	r3, [pc, #316]	; (8001074 <_vfiprintf_r+0x218>)
 8000f38:	429c      	cmp	r4, r3
 8000f3a:	bf08      	it	eq
 8000f3c:	68f4      	ldreq	r4, [r6, #12]
 8000f3e:	e79d      	b.n	8000e7c <_vfiprintf_r+0x20>
 8000f40:	4621      	mov	r1, r4
 8000f42:	4630      	mov	r0, r6
 8000f44:	f7ff fc6e 	bl	8000824 <__swsetup_r>
 8000f48:	2800      	cmp	r0, #0
 8000f4a:	d09d      	beq.n	8000e88 <_vfiprintf_r+0x2c>
 8000f4c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f50:	b01d      	add	sp, #116	; 0x74
 8000f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f56:	46a8      	mov	r8, r5
 8000f58:	e7a2      	b.n	8000ea0 <_vfiprintf_r+0x44>
 8000f5a:	4a44      	ldr	r2, [pc, #272]	; (800106c <_vfiprintf_r+0x210>)
 8000f5c:	1a80      	subs	r0, r0, r2
 8000f5e:	fa0b f000 	lsl.w	r0, fp, r0
 8000f62:	4318      	orrs	r0, r3
 8000f64:	9004      	str	r0, [sp, #16]
 8000f66:	4645      	mov	r5, r8
 8000f68:	e7be      	b.n	8000ee8 <_vfiprintf_r+0x8c>
 8000f6a:	9a03      	ldr	r2, [sp, #12]
 8000f6c:	1d11      	adds	r1, r2, #4
 8000f6e:	6812      	ldr	r2, [r2, #0]
 8000f70:	9103      	str	r1, [sp, #12]
 8000f72:	2a00      	cmp	r2, #0
 8000f74:	db01      	blt.n	8000f7a <_vfiprintf_r+0x11e>
 8000f76:	9207      	str	r2, [sp, #28]
 8000f78:	e004      	b.n	8000f84 <_vfiprintf_r+0x128>
 8000f7a:	4252      	negs	r2, r2
 8000f7c:	f043 0302 	orr.w	r3, r3, #2
 8000f80:	9207      	str	r2, [sp, #28]
 8000f82:	9304      	str	r3, [sp, #16]
 8000f84:	f898 3000 	ldrb.w	r3, [r8]
 8000f88:	2b2e      	cmp	r3, #46	; 0x2e
 8000f8a:	d10e      	bne.n	8000faa <_vfiprintf_r+0x14e>
 8000f8c:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000f90:	2b2a      	cmp	r3, #42	; 0x2a
 8000f92:	d138      	bne.n	8001006 <_vfiprintf_r+0x1aa>
 8000f94:	9b03      	ldr	r3, [sp, #12]
 8000f96:	1d1a      	adds	r2, r3, #4
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	9203      	str	r2, [sp, #12]
 8000f9c:	2b00      	cmp	r3, #0
 8000f9e:	bfb8      	it	lt
 8000fa0:	f04f 33ff 	movlt.w	r3, #4294967295
 8000fa4:	f108 0802 	add.w	r8, r8, #2
 8000fa8:	9305      	str	r3, [sp, #20]
 8000faa:	4d33      	ldr	r5, [pc, #204]	; (8001078 <_vfiprintf_r+0x21c>)
 8000fac:	f898 1000 	ldrb.w	r1, [r8]
 8000fb0:	2203      	movs	r2, #3
 8000fb2:	4628      	mov	r0, r5
 8000fb4:	f7ff f92c 	bl	8000210 <memchr>
 8000fb8:	b140      	cbz	r0, 8000fcc <_vfiprintf_r+0x170>
 8000fba:	2340      	movs	r3, #64	; 0x40
 8000fbc:	1b40      	subs	r0, r0, r5
 8000fbe:	fa03 f000 	lsl.w	r0, r3, r0
 8000fc2:	9b04      	ldr	r3, [sp, #16]
 8000fc4:	4303      	orrs	r3, r0
 8000fc6:	f108 0801 	add.w	r8, r8, #1
 8000fca:	9304      	str	r3, [sp, #16]
 8000fcc:	f898 1000 	ldrb.w	r1, [r8]
 8000fd0:	482a      	ldr	r0, [pc, #168]	; (800107c <_vfiprintf_r+0x220>)
 8000fd2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000fd6:	2206      	movs	r2, #6
 8000fd8:	f108 0701 	add.w	r7, r8, #1
 8000fdc:	f7ff f918 	bl	8000210 <memchr>
 8000fe0:	2800      	cmp	r0, #0
 8000fe2:	d037      	beq.n	8001054 <_vfiprintf_r+0x1f8>
 8000fe4:	4b26      	ldr	r3, [pc, #152]	; (8001080 <_vfiprintf_r+0x224>)
 8000fe6:	bb1b      	cbnz	r3, 8001030 <_vfiprintf_r+0x1d4>
 8000fe8:	9b03      	ldr	r3, [sp, #12]
 8000fea:	3307      	adds	r3, #7
 8000fec:	f023 0307 	bic.w	r3, r3, #7
 8000ff0:	3308      	adds	r3, #8
 8000ff2:	9303      	str	r3, [sp, #12]
 8000ff4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ff6:	444b      	add	r3, r9
 8000ff8:	9309      	str	r3, [sp, #36]	; 0x24
 8000ffa:	e750      	b.n	8000e9e <_vfiprintf_r+0x42>
 8000ffc:	fb05 3202 	mla	r2, r5, r2, r3
 8001000:	2001      	movs	r0, #1
 8001002:	4688      	mov	r8, r1
 8001004:	e78a      	b.n	8000f1c <_vfiprintf_r+0xc0>
 8001006:	2300      	movs	r3, #0
 8001008:	f108 0801 	add.w	r8, r8, #1
 800100c:	9305      	str	r3, [sp, #20]
 800100e:	4619      	mov	r1, r3
 8001010:	250a      	movs	r5, #10
 8001012:	4640      	mov	r0, r8
 8001014:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001018:	3a30      	subs	r2, #48	; 0x30
 800101a:	2a09      	cmp	r2, #9
 800101c:	d903      	bls.n	8001026 <_vfiprintf_r+0x1ca>
 800101e:	2b00      	cmp	r3, #0
 8001020:	d0c3      	beq.n	8000faa <_vfiprintf_r+0x14e>
 8001022:	9105      	str	r1, [sp, #20]
 8001024:	e7c1      	b.n	8000faa <_vfiprintf_r+0x14e>
 8001026:	fb05 2101 	mla	r1, r5, r1, r2
 800102a:	2301      	movs	r3, #1
 800102c:	4680      	mov	r8, r0
 800102e:	e7f0      	b.n	8001012 <_vfiprintf_r+0x1b6>
 8001030:	ab03      	add	r3, sp, #12
 8001032:	9300      	str	r3, [sp, #0]
 8001034:	4622      	mov	r2, r4
 8001036:	4b13      	ldr	r3, [pc, #76]	; (8001084 <_vfiprintf_r+0x228>)
 8001038:	a904      	add	r1, sp, #16
 800103a:	4630      	mov	r0, r6
 800103c:	f3af 8000 	nop.w
 8001040:	f1b0 3fff 	cmp.w	r0, #4294967295
 8001044:	4681      	mov	r9, r0
 8001046:	d1d5      	bne.n	8000ff4 <_vfiprintf_r+0x198>
 8001048:	89a3      	ldrh	r3, [r4, #12]
 800104a:	065b      	lsls	r3, r3, #25
 800104c:	f53f af7e 	bmi.w	8000f4c <_vfiprintf_r+0xf0>
 8001050:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001052:	e77d      	b.n	8000f50 <_vfiprintf_r+0xf4>
 8001054:	ab03      	add	r3, sp, #12
 8001056:	9300      	str	r3, [sp, #0]
 8001058:	4622      	mov	r2, r4
 800105a:	4b0a      	ldr	r3, [pc, #40]	; (8001084 <_vfiprintf_r+0x228>)
 800105c:	a904      	add	r1, sp, #16
 800105e:	4630      	mov	r0, r6
 8001060:	f000 f888 	bl	8001174 <_printf_i>
 8001064:	e7ec      	b.n	8001040 <_vfiprintf_r+0x1e4>
 8001066:	bf00      	nop
 8001068:	080015bc 	.word	0x080015bc
 800106c:	080015fc 	.word	0x080015fc
 8001070:	080015dc 	.word	0x080015dc
 8001074:	0800159c 	.word	0x0800159c
 8001078:	08001602 	.word	0x08001602
 800107c:	08001606 	.word	0x08001606
 8001080:	00000000 	.word	0x00000000
 8001084:	08000e37 	.word	0x08000e37

08001088 <_printf_common>:
 8001088:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800108c:	4691      	mov	r9, r2
 800108e:	461f      	mov	r7, r3
 8001090:	688a      	ldr	r2, [r1, #8]
 8001092:	690b      	ldr	r3, [r1, #16]
 8001094:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001098:	4293      	cmp	r3, r2
 800109a:	bfb8      	it	lt
 800109c:	4613      	movlt	r3, r2
 800109e:	f8c9 3000 	str.w	r3, [r9]
 80010a2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80010a6:	4606      	mov	r6, r0
 80010a8:	460c      	mov	r4, r1
 80010aa:	b112      	cbz	r2, 80010b2 <_printf_common+0x2a>
 80010ac:	3301      	adds	r3, #1
 80010ae:	f8c9 3000 	str.w	r3, [r9]
 80010b2:	6823      	ldr	r3, [r4, #0]
 80010b4:	0699      	lsls	r1, r3, #26
 80010b6:	bf42      	ittt	mi
 80010b8:	f8d9 3000 	ldrmi.w	r3, [r9]
 80010bc:	3302      	addmi	r3, #2
 80010be:	f8c9 3000 	strmi.w	r3, [r9]
 80010c2:	6825      	ldr	r5, [r4, #0]
 80010c4:	f015 0506 	ands.w	r5, r5, #6
 80010c8:	d107      	bne.n	80010da <_printf_common+0x52>
 80010ca:	f104 0a19 	add.w	sl, r4, #25
 80010ce:	68e3      	ldr	r3, [r4, #12]
 80010d0:	f8d9 2000 	ldr.w	r2, [r9]
 80010d4:	1a9b      	subs	r3, r3, r2
 80010d6:	42ab      	cmp	r3, r5
 80010d8:	dc28      	bgt.n	800112c <_printf_common+0xa4>
 80010da:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80010de:	6822      	ldr	r2, [r4, #0]
 80010e0:	3300      	adds	r3, #0
 80010e2:	bf18      	it	ne
 80010e4:	2301      	movne	r3, #1
 80010e6:	0692      	lsls	r2, r2, #26
 80010e8:	d42d      	bmi.n	8001146 <_printf_common+0xbe>
 80010ea:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80010ee:	4639      	mov	r1, r7
 80010f0:	4630      	mov	r0, r6
 80010f2:	47c0      	blx	r8
 80010f4:	3001      	adds	r0, #1
 80010f6:	d020      	beq.n	800113a <_printf_common+0xb2>
 80010f8:	6823      	ldr	r3, [r4, #0]
 80010fa:	68e5      	ldr	r5, [r4, #12]
 80010fc:	f8d9 2000 	ldr.w	r2, [r9]
 8001100:	f003 0306 	and.w	r3, r3, #6
 8001104:	2b04      	cmp	r3, #4
 8001106:	bf08      	it	eq
 8001108:	1aad      	subeq	r5, r5, r2
 800110a:	68a3      	ldr	r3, [r4, #8]
 800110c:	6922      	ldr	r2, [r4, #16]
 800110e:	bf0c      	ite	eq
 8001110:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001114:	2500      	movne	r5, #0
 8001116:	4293      	cmp	r3, r2
 8001118:	bfc4      	itt	gt
 800111a:	1a9b      	subgt	r3, r3, r2
 800111c:	18ed      	addgt	r5, r5, r3
 800111e:	f04f 0900 	mov.w	r9, #0
 8001122:	341a      	adds	r4, #26
 8001124:	454d      	cmp	r5, r9
 8001126:	d11a      	bne.n	800115e <_printf_common+0xd6>
 8001128:	2000      	movs	r0, #0
 800112a:	e008      	b.n	800113e <_printf_common+0xb6>
 800112c:	2301      	movs	r3, #1
 800112e:	4652      	mov	r2, sl
 8001130:	4639      	mov	r1, r7
 8001132:	4630      	mov	r0, r6
 8001134:	47c0      	blx	r8
 8001136:	3001      	adds	r0, #1
 8001138:	d103      	bne.n	8001142 <_printf_common+0xba>
 800113a:	f04f 30ff 	mov.w	r0, #4294967295
 800113e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001142:	3501      	adds	r5, #1
 8001144:	e7c3      	b.n	80010ce <_printf_common+0x46>
 8001146:	18e1      	adds	r1, r4, r3
 8001148:	1c5a      	adds	r2, r3, #1
 800114a:	2030      	movs	r0, #48	; 0x30
 800114c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001150:	4422      	add	r2, r4
 8001152:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001156:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800115a:	3302      	adds	r3, #2
 800115c:	e7c5      	b.n	80010ea <_printf_common+0x62>
 800115e:	2301      	movs	r3, #1
 8001160:	4622      	mov	r2, r4
 8001162:	4639      	mov	r1, r7
 8001164:	4630      	mov	r0, r6
 8001166:	47c0      	blx	r8
 8001168:	3001      	adds	r0, #1
 800116a:	d0e6      	beq.n	800113a <_printf_common+0xb2>
 800116c:	f109 0901 	add.w	r9, r9, #1
 8001170:	e7d8      	b.n	8001124 <_printf_common+0x9c>
	...

08001174 <_printf_i>:
 8001174:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001178:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 800117c:	460c      	mov	r4, r1
 800117e:	7e09      	ldrb	r1, [r1, #24]
 8001180:	b085      	sub	sp, #20
 8001182:	296e      	cmp	r1, #110	; 0x6e
 8001184:	4617      	mov	r7, r2
 8001186:	4606      	mov	r6, r0
 8001188:	4698      	mov	r8, r3
 800118a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800118c:	f000 80b3 	beq.w	80012f6 <_printf_i+0x182>
 8001190:	d822      	bhi.n	80011d8 <_printf_i+0x64>
 8001192:	2963      	cmp	r1, #99	; 0x63
 8001194:	d036      	beq.n	8001204 <_printf_i+0x90>
 8001196:	d80a      	bhi.n	80011ae <_printf_i+0x3a>
 8001198:	2900      	cmp	r1, #0
 800119a:	f000 80b9 	beq.w	8001310 <_printf_i+0x19c>
 800119e:	2958      	cmp	r1, #88	; 0x58
 80011a0:	f000 8083 	beq.w	80012aa <_printf_i+0x136>
 80011a4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011a8:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80011ac:	e032      	b.n	8001214 <_printf_i+0xa0>
 80011ae:	2964      	cmp	r1, #100	; 0x64
 80011b0:	d001      	beq.n	80011b6 <_printf_i+0x42>
 80011b2:	2969      	cmp	r1, #105	; 0x69
 80011b4:	d1f6      	bne.n	80011a4 <_printf_i+0x30>
 80011b6:	6820      	ldr	r0, [r4, #0]
 80011b8:	6813      	ldr	r3, [r2, #0]
 80011ba:	0605      	lsls	r5, r0, #24
 80011bc:	f103 0104 	add.w	r1, r3, #4
 80011c0:	d52a      	bpl.n	8001218 <_printf_i+0xa4>
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	6011      	str	r1, [r2, #0]
 80011c6:	2b00      	cmp	r3, #0
 80011c8:	da03      	bge.n	80011d2 <_printf_i+0x5e>
 80011ca:	222d      	movs	r2, #45	; 0x2d
 80011cc:	425b      	negs	r3, r3
 80011ce:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80011d2:	486f      	ldr	r0, [pc, #444]	; (8001390 <_printf_i+0x21c>)
 80011d4:	220a      	movs	r2, #10
 80011d6:	e039      	b.n	800124c <_printf_i+0xd8>
 80011d8:	2973      	cmp	r1, #115	; 0x73
 80011da:	f000 809d 	beq.w	8001318 <_printf_i+0x1a4>
 80011de:	d808      	bhi.n	80011f2 <_printf_i+0x7e>
 80011e0:	296f      	cmp	r1, #111	; 0x6f
 80011e2:	d020      	beq.n	8001226 <_printf_i+0xb2>
 80011e4:	2970      	cmp	r1, #112	; 0x70
 80011e6:	d1dd      	bne.n	80011a4 <_printf_i+0x30>
 80011e8:	6823      	ldr	r3, [r4, #0]
 80011ea:	f043 0320 	orr.w	r3, r3, #32
 80011ee:	6023      	str	r3, [r4, #0]
 80011f0:	e003      	b.n	80011fa <_printf_i+0x86>
 80011f2:	2975      	cmp	r1, #117	; 0x75
 80011f4:	d017      	beq.n	8001226 <_printf_i+0xb2>
 80011f6:	2978      	cmp	r1, #120	; 0x78
 80011f8:	d1d4      	bne.n	80011a4 <_printf_i+0x30>
 80011fa:	2378      	movs	r3, #120	; 0x78
 80011fc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001200:	4864      	ldr	r0, [pc, #400]	; (8001394 <_printf_i+0x220>)
 8001202:	e055      	b.n	80012b0 <_printf_i+0x13c>
 8001204:	6813      	ldr	r3, [r2, #0]
 8001206:	1d19      	adds	r1, r3, #4
 8001208:	681b      	ldr	r3, [r3, #0]
 800120a:	6011      	str	r1, [r2, #0]
 800120c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001210:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001214:	2301      	movs	r3, #1
 8001216:	e08c      	b.n	8001332 <_printf_i+0x1be>
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	6011      	str	r1, [r2, #0]
 800121c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001220:	bf18      	it	ne
 8001222:	b21b      	sxthne	r3, r3
 8001224:	e7cf      	b.n	80011c6 <_printf_i+0x52>
 8001226:	6813      	ldr	r3, [r2, #0]
 8001228:	6825      	ldr	r5, [r4, #0]
 800122a:	1d18      	adds	r0, r3, #4
 800122c:	6010      	str	r0, [r2, #0]
 800122e:	0628      	lsls	r0, r5, #24
 8001230:	d501      	bpl.n	8001236 <_printf_i+0xc2>
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	e002      	b.n	800123c <_printf_i+0xc8>
 8001236:	0668      	lsls	r0, r5, #25
 8001238:	d5fb      	bpl.n	8001232 <_printf_i+0xbe>
 800123a:	881b      	ldrh	r3, [r3, #0]
 800123c:	4854      	ldr	r0, [pc, #336]	; (8001390 <_printf_i+0x21c>)
 800123e:	296f      	cmp	r1, #111	; 0x6f
 8001240:	bf14      	ite	ne
 8001242:	220a      	movne	r2, #10
 8001244:	2208      	moveq	r2, #8
 8001246:	2100      	movs	r1, #0
 8001248:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800124c:	6865      	ldr	r5, [r4, #4]
 800124e:	60a5      	str	r5, [r4, #8]
 8001250:	2d00      	cmp	r5, #0
 8001252:	f2c0 8095 	blt.w	8001380 <_printf_i+0x20c>
 8001256:	6821      	ldr	r1, [r4, #0]
 8001258:	f021 0104 	bic.w	r1, r1, #4
 800125c:	6021      	str	r1, [r4, #0]
 800125e:	2b00      	cmp	r3, #0
 8001260:	d13d      	bne.n	80012de <_printf_i+0x16a>
 8001262:	2d00      	cmp	r5, #0
 8001264:	f040 808e 	bne.w	8001384 <_printf_i+0x210>
 8001268:	4665      	mov	r5, ip
 800126a:	2a08      	cmp	r2, #8
 800126c:	d10b      	bne.n	8001286 <_printf_i+0x112>
 800126e:	6823      	ldr	r3, [r4, #0]
 8001270:	07db      	lsls	r3, r3, #31
 8001272:	d508      	bpl.n	8001286 <_printf_i+0x112>
 8001274:	6923      	ldr	r3, [r4, #16]
 8001276:	6862      	ldr	r2, [r4, #4]
 8001278:	429a      	cmp	r2, r3
 800127a:	bfde      	ittt	le
 800127c:	2330      	movle	r3, #48	; 0x30
 800127e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001282:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001286:	ebac 0305 	sub.w	r3, ip, r5
 800128a:	6123      	str	r3, [r4, #16]
 800128c:	f8cd 8000 	str.w	r8, [sp]
 8001290:	463b      	mov	r3, r7
 8001292:	aa03      	add	r2, sp, #12
 8001294:	4621      	mov	r1, r4
 8001296:	4630      	mov	r0, r6
 8001298:	f7ff fef6 	bl	8001088 <_printf_common>
 800129c:	3001      	adds	r0, #1
 800129e:	d14d      	bne.n	800133c <_printf_i+0x1c8>
 80012a0:	f04f 30ff 	mov.w	r0, #4294967295
 80012a4:	b005      	add	sp, #20
 80012a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012aa:	4839      	ldr	r0, [pc, #228]	; (8001390 <_printf_i+0x21c>)
 80012ac:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80012b0:	6813      	ldr	r3, [r2, #0]
 80012b2:	6821      	ldr	r1, [r4, #0]
 80012b4:	1d1d      	adds	r5, r3, #4
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	6015      	str	r5, [r2, #0]
 80012ba:	060a      	lsls	r2, r1, #24
 80012bc:	d50b      	bpl.n	80012d6 <_printf_i+0x162>
 80012be:	07ca      	lsls	r2, r1, #31
 80012c0:	bf44      	itt	mi
 80012c2:	f041 0120 	orrmi.w	r1, r1, #32
 80012c6:	6021      	strmi	r1, [r4, #0]
 80012c8:	b91b      	cbnz	r3, 80012d2 <_printf_i+0x15e>
 80012ca:	6822      	ldr	r2, [r4, #0]
 80012cc:	f022 0220 	bic.w	r2, r2, #32
 80012d0:	6022      	str	r2, [r4, #0]
 80012d2:	2210      	movs	r2, #16
 80012d4:	e7b7      	b.n	8001246 <_printf_i+0xd2>
 80012d6:	064d      	lsls	r5, r1, #25
 80012d8:	bf48      	it	mi
 80012da:	b29b      	uxthmi	r3, r3
 80012dc:	e7ef      	b.n	80012be <_printf_i+0x14a>
 80012de:	4665      	mov	r5, ip
 80012e0:	fbb3 f1f2 	udiv	r1, r3, r2
 80012e4:	fb02 3311 	mls	r3, r2, r1, r3
 80012e8:	5cc3      	ldrb	r3, [r0, r3]
 80012ea:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80012ee:	460b      	mov	r3, r1
 80012f0:	2900      	cmp	r1, #0
 80012f2:	d1f5      	bne.n	80012e0 <_printf_i+0x16c>
 80012f4:	e7b9      	b.n	800126a <_printf_i+0xf6>
 80012f6:	6813      	ldr	r3, [r2, #0]
 80012f8:	6825      	ldr	r5, [r4, #0]
 80012fa:	6961      	ldr	r1, [r4, #20]
 80012fc:	1d18      	adds	r0, r3, #4
 80012fe:	6010      	str	r0, [r2, #0]
 8001300:	0628      	lsls	r0, r5, #24
 8001302:	681b      	ldr	r3, [r3, #0]
 8001304:	d501      	bpl.n	800130a <_printf_i+0x196>
 8001306:	6019      	str	r1, [r3, #0]
 8001308:	e002      	b.n	8001310 <_printf_i+0x19c>
 800130a:	066a      	lsls	r2, r5, #25
 800130c:	d5fb      	bpl.n	8001306 <_printf_i+0x192>
 800130e:	8019      	strh	r1, [r3, #0]
 8001310:	2300      	movs	r3, #0
 8001312:	6123      	str	r3, [r4, #16]
 8001314:	4665      	mov	r5, ip
 8001316:	e7b9      	b.n	800128c <_printf_i+0x118>
 8001318:	6813      	ldr	r3, [r2, #0]
 800131a:	1d19      	adds	r1, r3, #4
 800131c:	6011      	str	r1, [r2, #0]
 800131e:	681d      	ldr	r5, [r3, #0]
 8001320:	6862      	ldr	r2, [r4, #4]
 8001322:	2100      	movs	r1, #0
 8001324:	4628      	mov	r0, r5
 8001326:	f7fe ff73 	bl	8000210 <memchr>
 800132a:	b108      	cbz	r0, 8001330 <_printf_i+0x1bc>
 800132c:	1b40      	subs	r0, r0, r5
 800132e:	6060      	str	r0, [r4, #4]
 8001330:	6863      	ldr	r3, [r4, #4]
 8001332:	6123      	str	r3, [r4, #16]
 8001334:	2300      	movs	r3, #0
 8001336:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800133a:	e7a7      	b.n	800128c <_printf_i+0x118>
 800133c:	6923      	ldr	r3, [r4, #16]
 800133e:	462a      	mov	r2, r5
 8001340:	4639      	mov	r1, r7
 8001342:	4630      	mov	r0, r6
 8001344:	47c0      	blx	r8
 8001346:	3001      	adds	r0, #1
 8001348:	d0aa      	beq.n	80012a0 <_printf_i+0x12c>
 800134a:	6823      	ldr	r3, [r4, #0]
 800134c:	079b      	lsls	r3, r3, #30
 800134e:	d413      	bmi.n	8001378 <_printf_i+0x204>
 8001350:	68e0      	ldr	r0, [r4, #12]
 8001352:	9b03      	ldr	r3, [sp, #12]
 8001354:	4298      	cmp	r0, r3
 8001356:	bfb8      	it	lt
 8001358:	4618      	movlt	r0, r3
 800135a:	e7a3      	b.n	80012a4 <_printf_i+0x130>
 800135c:	2301      	movs	r3, #1
 800135e:	464a      	mov	r2, r9
 8001360:	4639      	mov	r1, r7
 8001362:	4630      	mov	r0, r6
 8001364:	47c0      	blx	r8
 8001366:	3001      	adds	r0, #1
 8001368:	d09a      	beq.n	80012a0 <_printf_i+0x12c>
 800136a:	3501      	adds	r5, #1
 800136c:	68e3      	ldr	r3, [r4, #12]
 800136e:	9a03      	ldr	r2, [sp, #12]
 8001370:	1a9b      	subs	r3, r3, r2
 8001372:	42ab      	cmp	r3, r5
 8001374:	dcf2      	bgt.n	800135c <_printf_i+0x1e8>
 8001376:	e7eb      	b.n	8001350 <_printf_i+0x1dc>
 8001378:	2500      	movs	r5, #0
 800137a:	f104 0919 	add.w	r9, r4, #25
 800137e:	e7f5      	b.n	800136c <_printf_i+0x1f8>
 8001380:	2b00      	cmp	r3, #0
 8001382:	d1ac      	bne.n	80012de <_printf_i+0x16a>
 8001384:	7803      	ldrb	r3, [r0, #0]
 8001386:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800138a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800138e:	e76c      	b.n	800126a <_printf_i+0xf6>
 8001390:	0800160d 	.word	0x0800160d
 8001394:	0800161e 	.word	0x0800161e

08001398 <_sbrk_r>:
 8001398:	b538      	push	{r3, r4, r5, lr}
 800139a:	4c06      	ldr	r4, [pc, #24]	; (80013b4 <_sbrk_r+0x1c>)
 800139c:	2300      	movs	r3, #0
 800139e:	4605      	mov	r5, r0
 80013a0:	4608      	mov	r0, r1
 80013a2:	6023      	str	r3, [r4, #0]
 80013a4:	f7ff f8de 	bl	8000564 <_sbrk>
 80013a8:	1c43      	adds	r3, r0, #1
 80013aa:	d102      	bne.n	80013b2 <_sbrk_r+0x1a>
 80013ac:	6823      	ldr	r3, [r4, #0]
 80013ae:	b103      	cbz	r3, 80013b2 <_sbrk_r+0x1a>
 80013b0:	602b      	str	r3, [r5, #0]
 80013b2:	bd38      	pop	{r3, r4, r5, pc}
 80013b4:	2000008c 	.word	0x2000008c

080013b8 <__sread>:
 80013b8:	b510      	push	{r4, lr}
 80013ba:	460c      	mov	r4, r1
 80013bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c0:	f000 f896 	bl	80014f0 <_read_r>
 80013c4:	2800      	cmp	r0, #0
 80013c6:	bfab      	itete	ge
 80013c8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80013ca:	89a3      	ldrhlt	r3, [r4, #12]
 80013cc:	181b      	addge	r3, r3, r0
 80013ce:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80013d2:	bfac      	ite	ge
 80013d4:	6563      	strge	r3, [r4, #84]	; 0x54
 80013d6:	81a3      	strhlt	r3, [r4, #12]
 80013d8:	bd10      	pop	{r4, pc}

080013da <__swrite>:
 80013da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013de:	461f      	mov	r7, r3
 80013e0:	898b      	ldrh	r3, [r1, #12]
 80013e2:	05db      	lsls	r3, r3, #23
 80013e4:	4605      	mov	r5, r0
 80013e6:	460c      	mov	r4, r1
 80013e8:	4616      	mov	r6, r2
 80013ea:	d505      	bpl.n	80013f8 <__swrite+0x1e>
 80013ec:	2302      	movs	r3, #2
 80013ee:	2200      	movs	r2, #0
 80013f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013f4:	f000 f868 	bl	80014c8 <_lseek_r>
 80013f8:	89a3      	ldrh	r3, [r4, #12]
 80013fa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013fe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001402:	81a3      	strh	r3, [r4, #12]
 8001404:	4632      	mov	r2, r6
 8001406:	463b      	mov	r3, r7
 8001408:	4628      	mov	r0, r5
 800140a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800140e:	f000 b817 	b.w	8001440 <_write_r>

08001412 <__sseek>:
 8001412:	b510      	push	{r4, lr}
 8001414:	460c      	mov	r4, r1
 8001416:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800141a:	f000 f855 	bl	80014c8 <_lseek_r>
 800141e:	1c43      	adds	r3, r0, #1
 8001420:	89a3      	ldrh	r3, [r4, #12]
 8001422:	bf15      	itete	ne
 8001424:	6560      	strne	r0, [r4, #84]	; 0x54
 8001426:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800142a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800142e:	81a3      	strheq	r3, [r4, #12]
 8001430:	bf18      	it	ne
 8001432:	81a3      	strhne	r3, [r4, #12]
 8001434:	bd10      	pop	{r4, pc}

08001436 <__sclose>:
 8001436:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800143a:	f000 b813 	b.w	8001464 <_close_r>
	...

08001440 <_write_r>:
 8001440:	b538      	push	{r3, r4, r5, lr}
 8001442:	4c07      	ldr	r4, [pc, #28]	; (8001460 <_write_r+0x20>)
 8001444:	4605      	mov	r5, r0
 8001446:	4608      	mov	r0, r1
 8001448:	4611      	mov	r1, r2
 800144a:	2200      	movs	r2, #0
 800144c:	6022      	str	r2, [r4, #0]
 800144e:	461a      	mov	r2, r3
 8001450:	f7ff f83b 	bl	80004ca <_write>
 8001454:	1c43      	adds	r3, r0, #1
 8001456:	d102      	bne.n	800145e <_write_r+0x1e>
 8001458:	6823      	ldr	r3, [r4, #0]
 800145a:	b103      	cbz	r3, 800145e <_write_r+0x1e>
 800145c:	602b      	str	r3, [r5, #0]
 800145e:	bd38      	pop	{r3, r4, r5, pc}
 8001460:	2000008c 	.word	0x2000008c

08001464 <_close_r>:
 8001464:	b538      	push	{r3, r4, r5, lr}
 8001466:	4c06      	ldr	r4, [pc, #24]	; (8001480 <_close_r+0x1c>)
 8001468:	2300      	movs	r3, #0
 800146a:	4605      	mov	r5, r0
 800146c:	4608      	mov	r0, r1
 800146e:	6023      	str	r3, [r4, #0]
 8001470:	f7ff f847 	bl	8000502 <_close>
 8001474:	1c43      	adds	r3, r0, #1
 8001476:	d102      	bne.n	800147e <_close_r+0x1a>
 8001478:	6823      	ldr	r3, [r4, #0]
 800147a:	b103      	cbz	r3, 800147e <_close_r+0x1a>
 800147c:	602b      	str	r3, [r5, #0]
 800147e:	bd38      	pop	{r3, r4, r5, pc}
 8001480:	2000008c 	.word	0x2000008c

08001484 <_fstat_r>:
 8001484:	b538      	push	{r3, r4, r5, lr}
 8001486:	4c07      	ldr	r4, [pc, #28]	; (80014a4 <_fstat_r+0x20>)
 8001488:	2300      	movs	r3, #0
 800148a:	4605      	mov	r5, r0
 800148c:	4608      	mov	r0, r1
 800148e:	4611      	mov	r1, r2
 8001490:	6023      	str	r3, [r4, #0]
 8001492:	f7ff f841 	bl	8000518 <_fstat>
 8001496:	1c43      	adds	r3, r0, #1
 8001498:	d102      	bne.n	80014a0 <_fstat_r+0x1c>
 800149a:	6823      	ldr	r3, [r4, #0]
 800149c:	b103      	cbz	r3, 80014a0 <_fstat_r+0x1c>
 800149e:	602b      	str	r3, [r5, #0]
 80014a0:	bd38      	pop	{r3, r4, r5, pc}
 80014a2:	bf00      	nop
 80014a4:	2000008c 	.word	0x2000008c

080014a8 <_isatty_r>:
 80014a8:	b538      	push	{r3, r4, r5, lr}
 80014aa:	4c06      	ldr	r4, [pc, #24]	; (80014c4 <_isatty_r+0x1c>)
 80014ac:	2300      	movs	r3, #0
 80014ae:	4605      	mov	r5, r0
 80014b0:	4608      	mov	r0, r1
 80014b2:	6023      	str	r3, [r4, #0]
 80014b4:	f7ff f83f 	bl	8000536 <_isatty>
 80014b8:	1c43      	adds	r3, r0, #1
 80014ba:	d102      	bne.n	80014c2 <_isatty_r+0x1a>
 80014bc:	6823      	ldr	r3, [r4, #0]
 80014be:	b103      	cbz	r3, 80014c2 <_isatty_r+0x1a>
 80014c0:	602b      	str	r3, [r5, #0]
 80014c2:	bd38      	pop	{r3, r4, r5, pc}
 80014c4:	2000008c 	.word	0x2000008c

080014c8 <_lseek_r>:
 80014c8:	b538      	push	{r3, r4, r5, lr}
 80014ca:	4c07      	ldr	r4, [pc, #28]	; (80014e8 <_lseek_r+0x20>)
 80014cc:	4605      	mov	r5, r0
 80014ce:	4608      	mov	r0, r1
 80014d0:	4611      	mov	r1, r2
 80014d2:	2200      	movs	r2, #0
 80014d4:	6022      	str	r2, [r4, #0]
 80014d6:	461a      	mov	r2, r3
 80014d8:	f7ff f837 	bl	800054a <_lseek>
 80014dc:	1c43      	adds	r3, r0, #1
 80014de:	d102      	bne.n	80014e6 <_lseek_r+0x1e>
 80014e0:	6823      	ldr	r3, [r4, #0]
 80014e2:	b103      	cbz	r3, 80014e6 <_lseek_r+0x1e>
 80014e4:	602b      	str	r3, [r5, #0]
 80014e6:	bd38      	pop	{r3, r4, r5, pc}
 80014e8:	2000008c 	.word	0x2000008c

080014ec <__malloc_lock>:
 80014ec:	4770      	bx	lr

080014ee <__malloc_unlock>:
 80014ee:	4770      	bx	lr

080014f0 <_read_r>:
 80014f0:	b538      	push	{r3, r4, r5, lr}
 80014f2:	4c07      	ldr	r4, [pc, #28]	; (8001510 <_read_r+0x20>)
 80014f4:	4605      	mov	r5, r0
 80014f6:	4608      	mov	r0, r1
 80014f8:	4611      	mov	r1, r2
 80014fa:	2200      	movs	r2, #0
 80014fc:	6022      	str	r2, [r4, #0]
 80014fe:	461a      	mov	r2, r3
 8001500:	f7fe ffc6 	bl	8000490 <_read>
 8001504:	1c43      	adds	r3, r0, #1
 8001506:	d102      	bne.n	800150e <_read_r+0x1e>
 8001508:	6823      	ldr	r3, [r4, #0]
 800150a:	b103      	cbz	r3, 800150e <_read_r+0x1e>
 800150c:	602b      	str	r3, [r5, #0]
 800150e:	bd38      	pop	{r3, r4, r5, pc}
 8001510:	2000008c 	.word	0x2000008c

08001514 <_init>:
 8001514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001516:	bf00      	nop
 8001518:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800151a:	bc08      	pop	{r3}
 800151c:	469e      	mov	lr, r3
 800151e:	4770      	bx	lr

08001520 <_fini>:
 8001520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001522:	bf00      	nop
 8001524:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001526:	bc08      	pop	{r3}
 8001528:	469e      	mov	lr, r3
 800152a:	4770      	bx	lr
